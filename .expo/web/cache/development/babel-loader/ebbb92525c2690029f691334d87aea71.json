{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.combinedData = exports.radarData = exports.candleData = exports.scatterData = exports.bubbleData = exports.pieData = exports.barData = exports.lineData = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _ChartDataSetConfig = _interopRequireDefault(require(\"./ChartDataSetConfig\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar lineData = _propTypes.default.shape({\n  dataSets: _propTypes.default.arrayOf(_propTypes.default.shape({\n    values: _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.shape({\n      x: _propTypes.default.number,\n      y: _propTypes.default.number.isRequired,\n      marker: _propTypes.default.string\n    }), _propTypes.default.number])),\n    label: _propTypes.default.string.isRequired,\n    config: _propTypes.default.shape(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, _ChartDataSetConfig.default.common), _ChartDataSetConfig.default.barLineScatterCandleBubble), _ChartDataSetConfig.default.lineScatterCandleRadar), _ChartDataSetConfig.default.lineRadar), {}, {\n      circleRadius: _propTypes.default.number,\n      drawCircles: _propTypes.default.bool,\n      mode: _propTypes.default.oneOf(['LINEAR', 'STEPPED', 'CUBIC_BEZIER', 'HORIZONTAL_BEZIER']),\n      drawCubicIntensity: _propTypes.default.number,\n      circleColor: _propTypes.default.number,\n      circleColors: _propTypes.default.arrayOf(_propTypes.default.number),\n      circleHoleColor: _propTypes.default.number,\n      drawCircleHole: _propTypes.default.bool,\n      dashedLine: _propTypes.default.shape({\n        lineLength: _propTypes.default.number.isRequired,\n        spaceLength: _propTypes.default.number.isRequired,\n        phase: _propTypes.default.number\n      })\n    }))\n  }))\n});\n\nexports.lineData = lineData;\n\nvar barData = _propTypes.default.shape({\n  dataSets: _propTypes.default.arrayOf(_propTypes.default.shape({\n    values: _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.shape({\n      x: _propTypes.default.number,\n      y: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.arrayOf(_propTypes.default.number)]),\n      marker: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.arrayOf(_propTypes.default.string)])\n    }), _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.arrayOf(_propTypes.default.number)])])),\n    label: _propTypes.default.string.isRequired,\n    config: _propTypes.default.shape(_objectSpread(_objectSpread(_objectSpread({}, _ChartDataSetConfig.default.common), _ChartDataSetConfig.default.barLineScatterCandleBubble), {}, {\n      barShadowColor: _propTypes.default.number,\n      highlightAlpha: _propTypes.default.number,\n      stackLabels: _propTypes.default.arrayOf(_propTypes.default.string)\n    }))\n  })),\n  config: _propTypes.default.shape({\n    barWidth: _propTypes.default.number,\n    group: _propTypes.default.shape({\n      fromX: _propTypes.default.number.isRequired,\n      groupSpace: _propTypes.default.number.isRequired,\n      barSpace: _propTypes.default.number.isRequired\n    })\n  })\n});\n\nexports.barData = barData;\n\nvar bubbleData = _propTypes.default.shape({\n  dataSets: _propTypes.default.arrayOf(_propTypes.default.shape({\n    values: _propTypes.default.arrayOf(_propTypes.default.shape({\n      x: _propTypes.default.number,\n      y: _propTypes.default.number.isRequired,\n      size: _propTypes.default.number.isRequired,\n      marker: _propTypes.default.string\n    })),\n    label: _propTypes.default.string.isRequired,\n    config: _propTypes.default.shape(_objectSpread(_objectSpread({}, _ChartDataSetConfig.default.common), _ChartDataSetConfig.default.barLineScatterCandleBubble))\n  }))\n});\n\nexports.bubbleData = bubbleData;\n\nvar candleData = _propTypes.default.shape({\n  dataSets: _propTypes.default.arrayOf(_propTypes.default.shape({\n    values: _propTypes.default.arrayOf(_propTypes.default.shape({\n      x: _propTypes.default.number,\n      shadowH: _propTypes.default.number.isRequired,\n      shadowL: _propTypes.default.number.isRequired,\n      open: _propTypes.default.number.isRequired,\n      close: _propTypes.default.number.isRequired,\n      marker: _propTypes.default.string\n    })),\n    label: _propTypes.default.string.isRequired,\n    config: _propTypes.default.shape(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, _ChartDataSetConfig.default.common), _ChartDataSetConfig.default.barLineScatterCandleBubble), _ChartDataSetConfig.default.lineScatterCandleRadar), {}, {\n      barSpace: _propTypes.default.number,\n      shadowWidth: _propTypes.default.number,\n      shadowColor: _propTypes.default.number,\n      shadowColorSameAsCandle: _propTypes.default.bool,\n      neutralColor: _propTypes.default.number,\n      decreasingColor: _propTypes.default.number,\n      decreasingPaintStyle: _propTypes.default.oneOf(['FILL', 'STROKE', 'FILL_AND_STROKE']),\n      increasingColor: _propTypes.default.number,\n      increasingPaintStyle: _propTypes.default.oneOf(['FILL', 'STROKE', 'FILL_AND_STROKE'])\n    }))\n  }))\n});\n\nexports.candleData = candleData;\n\nvar pieData = _propTypes.default.shape({\n  dataSets: _propTypes.default.arrayOf(_propTypes.default.shape({\n    values: _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.shape({\n      value: _propTypes.default.number.isRequired,\n      label: _propTypes.default.string\n    }), _propTypes.default.number])),\n    label: _propTypes.default.string.isRequired,\n    config: _propTypes.default.shape(_objectSpread(_objectSpread({}, _ChartDataSetConfig.default.common), {}, {\n      sliceSpace: _propTypes.default.number,\n      selectionShift: _propTypes.default.number,\n      xValuePosition: _propTypes.default.oneOf(['INSIDE_SLICE', 'OUTSIDE_SLICE']),\n      yValuePosition: _propTypes.default.oneOf(['INSIDE_SLICE', 'OUTSIDE_SLICE']),\n      valueLinePart1Length: _propTypes.default.number,\n      valueLinePart2Length: _propTypes.default.number,\n      valueLineColor: _propTypes.default.number,\n      valueLineWidth: _propTypes.default.number,\n      valueLinePart1OffsetPercentage: _propTypes.default.number,\n      valueLineVariableLength: _propTypes.default.bool\n    }))\n  }))\n});\n\nexports.pieData = pieData;\n\nvar radarData = _propTypes.default.shape({\n  dataSets: _propTypes.default.arrayOf(_propTypes.default.shape({\n    values: _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.shape({\n      value: _propTypes.default.number.isRequired\n    }), _propTypes.default.number])),\n    label: _propTypes.default.string.isRequired,\n    config: _propTypes.default.shape(_objectSpread(_objectSpread(_objectSpread({}, _ChartDataSetConfig.default.common), _ChartDataSetConfig.default.lineScatterCandleRadar), _ChartDataSetConfig.default.lineRadar))\n  })),\n  labels: _propTypes.default.arrayOf(_propTypes.default.string)\n});\n\nexports.radarData = radarData;\n\nvar scatterData = _propTypes.default.shape({\n  dataSets: _propTypes.default.arrayOf(_propTypes.default.shape({\n    values: _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.shape({\n      x: _propTypes.default.number,\n      y: _propTypes.default.number.isRequired,\n      marker: _propTypes.default.string\n    }), _propTypes.default.number])),\n    label: _propTypes.default.string.isRequired,\n    config: _propTypes.default.shape(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, _ChartDataSetConfig.default.common), _ChartDataSetConfig.default.barLineScatterCandleBubble), _ChartDataSetConfig.default.lineScatterCandleRadar), {}, {\n      scatterShapeSize: _propTypes.default.number,\n      scatterShape: _propTypes.default.oneOf(['SQUARE', 'CIRCLE', 'TRIANGLE', 'CROSS', 'X']),\n      scatterShapeHoleColor: _propTypes.default.number,\n      scatterShapeHoleRadius: _propTypes.default.number\n    }))\n  }))\n});\n\nexports.scatterData = scatterData;\n\nvar combinedData = _propTypes.default.shape({\n  lineData: lineData,\n  barData: barData,\n  scatterData: scatterData,\n  candleData: candleData,\n  bubbleData: bubbleData\n});\n\nexports.combinedData = combinedData;","map":{"version":3,"sources":["C:/Users/venkatesh.devireddy/Projects/IoT_Central_CPM/node_modules/react-native-charts-wrapper/lib/ChartDataConfig.js"],"names":["lineData","PropTypes","shape","dataSets","arrayOf","values","oneOfType","x","number","y","isRequired","marker","string","label","config","ChartDataSetConfig","common","barLineScatterCandleBubble","lineScatterCandleRadar","lineRadar","circleRadius","drawCircles","bool","mode","oneOf","drawCubicIntensity","circleColor","circleColors","circleHoleColor","drawCircleHole","dashedLine","lineLength","spaceLength","phase","barData","barShadowColor","highlightAlpha","stackLabels","barWidth","group","fromX","groupSpace","barSpace","bubbleData","size","candleData","shadowH","shadowL","open","close","shadowWidth","shadowColor","shadowColorSameAsCandle","neutralColor","decreasingColor","decreasingPaintStyle","increasingColor","increasingPaintStyle","pieData","value","sliceSpace","selectionShift","xValuePosition","yValuePosition","valueLinePart1Length","valueLinePart2Length","valueLineColor","valueLineWidth","valueLinePart1OffsetPercentage","valueLineVariableLength","radarData","labels","scatterData","scatterShapeSize","scatterShape","scatterShapeHoleColor","scatterShapeHoleRadius","combinedData"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport ChartDataSetConfig from './ChartDataSetConfig';\n\n\nconst lineData = PropTypes.shape({\n  dataSets: PropTypes.arrayOf(PropTypes.shape({\n    values: PropTypes.arrayOf(\n      PropTypes.oneOfType([\n        PropTypes.shape({\n          x: PropTypes.number,\n          y: PropTypes.number.isRequired,\n          marker: PropTypes.string\n        }),\n        PropTypes.number\n      ])\n    ),\n    label: PropTypes.string.isRequired,\n    config: PropTypes.shape({\n      ...ChartDataSetConfig.common,\n      ...ChartDataSetConfig.barLineScatterCandleBubble,\n      ...ChartDataSetConfig.lineScatterCandleRadar,\n      ...ChartDataSetConfig.lineRadar,\n\n      circleRadius: PropTypes.number,\n      drawCircles: PropTypes.bool,\n      mode: PropTypes.oneOf(['LINEAR', 'STEPPED', 'CUBIC_BEZIER', 'HORIZONTAL_BEZIER']),\n      drawCubicIntensity: PropTypes.number,\n      circleColor: PropTypes.number,\n      circleColors: PropTypes.arrayOf(PropTypes.number),\n      circleHoleColor: PropTypes.number,\n      drawCircleHole: PropTypes.bool,\n\n      dashedLine: PropTypes.shape({\n        lineLength: PropTypes.number.isRequired,\n        spaceLength: PropTypes.number.isRequired,\n        phase: PropTypes.number,\n      })\n    })\n  }))\n})\n\nconst barData = PropTypes.shape({\n  dataSets: PropTypes.arrayOf(PropTypes.shape({\n    values: PropTypes.arrayOf(\n      PropTypes.oneOfType([\n        PropTypes.shape({\n          x: PropTypes.number,\n          y: PropTypes.oneOfType([\n            PropTypes.number,\n            PropTypes.arrayOf(PropTypes.number)\n          ]),\n          marker: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)])\n        }),\n        PropTypes.oneOfType([\n          PropTypes.number,\n          PropTypes.arrayOf(PropTypes.number)\n        ])\n      ])\n    ),\n    label: PropTypes.string.isRequired,\n    config: PropTypes.shape({\n      ...ChartDataSetConfig.common,\n      ...ChartDataSetConfig.barLineScatterCandleBubble,\n\n      barShadowColor: PropTypes.number,\n      highlightAlpha: PropTypes.number,  // using android format (0-255), not ios format(0-1), the conversion is x/255\n      stackLabels: PropTypes.arrayOf(PropTypes.string)\n    })\n  })),\n\n  config: PropTypes.shape({\n    barWidth: PropTypes.number,\n    group: PropTypes.shape({\n      fromX: PropTypes.number.isRequired,\n      groupSpace: PropTypes.number.isRequired,\n      barSpace: PropTypes.number.isRequired\n    })\n  })\n\n})\n\nconst bubbleData = PropTypes.shape({\n  dataSets: PropTypes.arrayOf(PropTypes.shape({\n    values: PropTypes.arrayOf(PropTypes.shape({\n      x: PropTypes.number,\n      y: PropTypes.number.isRequired,\n      size: PropTypes.number.isRequired,\n      marker: PropTypes.string,\n    })),\n    label: PropTypes.string.isRequired,\n    config: PropTypes.shape({\n      ...ChartDataSetConfig.common,\n      ...ChartDataSetConfig.barLineScatterCandleBubble,\n\n    })\n  }))\n})\n\nconst candleData = PropTypes.shape({\n  dataSets: PropTypes.arrayOf(PropTypes.shape({\n    values: PropTypes.arrayOf(\n      PropTypes.shape({\n        x: PropTypes.number,\n        shadowH: PropTypes.number.isRequired,\n        shadowL: PropTypes.number.isRequired,\n        open: PropTypes.number.isRequired,\n        close: PropTypes.number.isRequired,\n        marker: PropTypes.string,\n      })\n    ),\n    label: PropTypes.string.isRequired,\n    config: PropTypes.shape({\n      ...ChartDataSetConfig.common,\n      ...ChartDataSetConfig.barLineScatterCandleBubble,\n      ...ChartDataSetConfig.lineScatterCandleRadar,\n\n      barSpace: PropTypes.number,\n      shadowWidth: PropTypes.number,\n      shadowColor: PropTypes.number,\n      shadowColorSameAsCandle: PropTypes.bool,\n      neutralColor: PropTypes.number,\n      decreasingColor: PropTypes.number,\n      decreasingPaintStyle: PropTypes.oneOf(['FILL', 'STROKE', 'FILL_AND_STROKE']),\n      increasingColor: PropTypes.number,\n      increasingPaintStyle: PropTypes.oneOf(['FILL', 'STROKE', 'FILL_AND_STROKE'])\n    })\n  })),\n})\n\nconst pieData = PropTypes.shape({\n  dataSets: PropTypes.arrayOf(PropTypes.shape({\n    values: PropTypes.arrayOf(\n      PropTypes.oneOfType([\n        PropTypes.shape({\n          value: PropTypes.number.isRequired,\n          label: PropTypes.string\n        }),\n        PropTypes.number\n      ])\n    ),\n    label: PropTypes.string.isRequired,\n    config: PropTypes.shape({\n      ...ChartDataSetConfig.common,\n\n      sliceSpace: PropTypes.number,\n      selectionShift: PropTypes.number,\n      xValuePosition: PropTypes.oneOf(['INSIDE_SLICE', 'OUTSIDE_SLICE']),\n      yValuePosition: PropTypes.oneOf(['INSIDE_SLICE', 'OUTSIDE_SLICE']),\n      valueLinePart1Length: PropTypes.number,\n      valueLinePart2Length: PropTypes.number,\n      valueLineColor: PropTypes.number,\n      valueLineWidth: PropTypes.number,\n      valueLinePart1OffsetPercentage: PropTypes.number,\n      valueLineVariableLength: PropTypes.bool\n    })\n  })),\n})\n\nconst radarData = PropTypes.shape({\n  dataSets: PropTypes.arrayOf(PropTypes.shape({\n    values: PropTypes.arrayOf(\n      PropTypes.oneOfType([\n        PropTypes.shape({value: PropTypes.number.isRequired,}),\n        PropTypes.number\n      ])\n    ),\n    label: PropTypes.string.isRequired,\n    config: PropTypes.shape({\n      ...ChartDataSetConfig.common,\n      ...ChartDataSetConfig.lineScatterCandleRadar,\n      ...ChartDataSetConfig.lineRadar\n\n    })\n  })),\n  labels: PropTypes.arrayOf(PropTypes.string)\n})\n\nconst scatterData = PropTypes.shape({\n  dataSets: PropTypes.arrayOf(PropTypes.shape({\n    values: PropTypes.arrayOf(\n      PropTypes.oneOfType([\n        PropTypes.shape({\n          x: PropTypes.number,\n          y: PropTypes.number.isRequired,\n          marker: PropTypes.string,\n        }),\n        PropTypes.number\n      ])\n    ),\n    label: PropTypes.string.isRequired,\n    config: PropTypes.shape({\n      ...ChartDataSetConfig.common,\n      ...ChartDataSetConfig.barLineScatterCandleBubble,\n      ...ChartDataSetConfig.lineScatterCandleRadar,\n\n      scatterShapeSize: PropTypes.number,\n      scatterShape: PropTypes.oneOf(['SQUARE', 'CIRCLE', 'TRIANGLE', 'CROSS', 'X']),\n      scatterShapeHoleColor: PropTypes.number,\n      scatterShapeHoleRadius: PropTypes.number\n    })\n  }))\n})\n\nconst combinedData = PropTypes.shape({\n  lineData: lineData,\n  barData: barData,\n  scatterData: scatterData,\n  candleData: candleData,\n  bubbleData: bubbleData\n})\n\nexport {lineData, barData, pieData, bubbleData, scatterData, candleData, radarData, combinedData};\n"]},"metadata":{},"sourceType":"script"}