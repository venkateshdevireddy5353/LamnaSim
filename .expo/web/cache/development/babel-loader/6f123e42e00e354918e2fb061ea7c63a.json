{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.RadioButtonContext = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar RadioButtonContext = React.createContext(null);\nexports.RadioButtonContext = RadioButtonContext;\n\nvar RadioButtonGroup = function (_React$Component) {\n  (0, _inherits2.default)(RadioButtonGroup, _React$Component);\n\n  var _super = _createSuper(RadioButtonGroup);\n\n  function RadioButtonGroup() {\n    (0, _classCallCheck2.default)(this, RadioButtonGroup);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(RadioButtonGroup, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          value = _this$props.value,\n          onValueChange = _this$props.onValueChange,\n          children = _this$props.children;\n      return React.createElement(RadioButtonContext.Provider, {\n        value: {\n          value: value,\n          onValueChange: onValueChange\n        }\n      }, children);\n    }\n  }]);\n  return RadioButtonGroup;\n}(React.Component);\n\n_defineProperty(RadioButtonGroup, \"displayName\", 'RadioButton.Group');\n\nvar _default = RadioButtonGroup;\nexports.default = _default;","map":{"version":3,"sources":["RadioButtonGroup.tsx"],"names":["RadioButtonContext","React","RadioButtonGroup","render","children","value","onValueChange"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;AAsBO,IAAMA,kBAAkB,GAAGC,KAAK,CAALA,aAAAA,CAA3B,IAA2BA,CAA3B;;;IA4CP,gB;;;;;;;;;;;;WAGEE,kBAAS;AACP,wBAA2C,KAA3C,KAAA;AAAA,UAAM,KAAN,eAAM,KAAN;AAAA,UAAM,aAAN,eAAM,aAAN;AAAA,UAA8BC,QAA9B,eAA8BA,QAA9B;AAEA,aACE,KAAA,CAAA,aAAA,CAAC,kBAAD,CAAA,QAAA,EAAA;AAA6B,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAF,EAAEA,KAAF;AAASC,UAAAA,aAAAA,EAAAA;AAAT;AAApC,OAAA,EADF,QACE,CADF;AAKD;;;EAX4BL,KAAK,CAApC,S;;gBAAMC,gB,iBACiB,mB;;eAavB,gB","sourcesContent":["import * as React from 'react';\n\ntype Props = {\n  /**\n   * Function to execute on selection change.\n   */\n  onValueChange: (value: string) => void;\n  /**\n   * Value of the currently selected radio button.\n   */\n  value: string;\n  /**\n   * React elements containing radio buttons.\n   */\n  children: React.ReactNode;\n};\n\nexport type RadioButtonContextType = {\n  value: string;\n  onValueChange: (item: string) => void;\n};\n\nexport const RadioButtonContext = React.createContext<RadioButtonContextType>(\n  null as any\n);\n\n/**\n * Radio button group allows to control a group of radio buttons.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/radio-button-group-android.gif\" />\n *  <figcaption>Android</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/radio-button-group-ios.gif\" />\n *  <figcaption>iOS</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { RadioButton, Text } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [value, setValue] = React.useState('first');\n *\n *   return (\n *     <RadioButton.Group onValueChange={value => setValue(value)} value={value}>\n *       <View>\n *         <Text>First</Text>\n *         <RadioButton value=\"first\" />\n *       </View>\n *       <View>\n *         <Text>Second</Text>\n *         <RadioButton value=\"second\" />\n *       </View>\n *     </RadioButton.Group>\n *   );\n * };\n *\n * export default MyComponent;\n *```\n */\nclass RadioButtonGroup extends React.Component<Props> {\n  static displayName = 'RadioButton.Group';\n\n  render() {\n    const { value, onValueChange, children } = this.props;\n\n    return (\n      <RadioButtonContext.Provider value={{ value, onValueChange }}>\n        {children}\n      </RadioButtonContext.Provider>\n    );\n  }\n}\n\nexport default RadioButtonGroup;\n"]},"metadata":{},"sourceType":"script"}