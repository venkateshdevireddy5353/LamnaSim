{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ManufacturerMap = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar ManufacturerMap = function () {\n  function ManufacturerMap() {\n    (0, _classCallCheck2.default)(this, ManufacturerMap);\n  }\n\n  (0, _createClass2.default)(ManufacturerMap, null, [{\n    key: \"addManufacturer\",\n    value: function addManufacturer(name, ids, deviceCtr) {\n      if (!this.mMap[name]) {\n        this.mMap[name] = {\n          ids: ids,\n          deviceCtr: deviceCtr\n        };\n      }\n    }\n  }, {\n    key: \"getManufacturerConstructor\",\n    value: function getManufacturerConstructor(name) {\n      if (!this.mMap[name]) {\n        return null;\n      }\n\n      return this.mMap[name].deviceCtr;\n    }\n  }, {\n    key: \"getManufacturers\",\n    value: function getManufacturers() {\n      return Object.keys(this.mMap);\n    }\n  }, {\n    key: \"getManufacturerIds\",\n    value: function getManufacturerIds(name) {\n      if (this.mMap[name]) {\n        return this.mMap[name].ids;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"removeManufacturer\",\n    value: function removeManufacturer(name) {\n      if (this.mMap[name]) {\n        delete this.mMap[name];\n      }\n    }\n  }]);\n  return ManufacturerMap;\n}();\n\nexports.ManufacturerMap = ManufacturerMap;\nManufacturerMap.mMap = {};","map":{"version":3,"sources":["C:/Users/venkatesh.devireddy/Projects/IoT_Central_CPM/src/health/manufacterMap.ts"],"names":["ManufacturerMap","name","ids","deviceCtr","mMap","Object","keys"],"mappings":";;;;;;;;;;;IAAaA,e;;;;;;;WAST,yBAAuBC,IAAvB,EAAqCC,GAArC,EAAoDC,SAApD,EAA0E;AACtE,UAAI,CAAC,KAAKC,IAAL,CAAUH,IAAV,CAAL,EAAsB;AAClB,aAAKG,IAAL,CAAUH,IAAV,IAAkB;AACdC,UAAAA,GAAG,EAAHA,GADc;AAEdC,UAAAA,SAAS,EAATA;AAFc,SAAlB;AAIH;AACJ;;;WAED,oCAAkCF,IAAlC,EAAgD;AAC5C,UAAI,CAAC,KAAKG,IAAL,CAAUH,IAAV,CAAL,EAAsB;AAClB,eAAO,IAAP;AACH;;AACD,aAAO,KAAKG,IAAL,CAAUH,IAAV,EAAgBE,SAAvB;AACH;;;WAED,4BAA0B;AACtB,aAAOE,MAAM,CAACC,IAAP,CAAY,KAAKF,IAAjB,CAAP;AACH;;;WAED,4BAA0BH,IAA1B,EAAyD;AACrD,UAAI,KAAKG,IAAL,CAAUH,IAAV,CAAJ,EAAqB;AACjB,eAAO,KAAKG,IAAL,CAAUH,IAAV,EAAgBC,GAAvB;AACH;;AACD,aAAO,IAAP;AACH;;;WAGD,4BAA0BD,IAA1B,EAAwC;AACpC,UAAI,KAAKG,IAAL,CAAUH,IAAV,CAAJ,EAAqB;AACjB,eAAO,KAAKG,IAAL,CAAUH,IAAV,CAAP;AACH;AACJ;;;;;;AAzCQD,e,CAEFI,I,GAKH,E","sourcesContent":["export class ManufacturerMap {\r\n\r\n    static mMap: {\r\n        [ManufacturerId: string]: {\r\n            ids: string[],\r\n            deviceCtr: any\r\n        }\r\n    } = {}\r\n\r\n    static addManufacturer(name: string, ids: string[], deviceCtr: any): void {\r\n        if (!this.mMap[name]) {\r\n            this.mMap[name] = {\r\n                ids,\r\n                deviceCtr\r\n            }\r\n        }\r\n    }\r\n\r\n    static getManufacturerConstructor(name: string) {\r\n        if (!this.mMap[name]) {\r\n            return null;\r\n        }\r\n        return this.mMap[name].deviceCtr;\r\n    }\r\n\r\n    static getManufacturers() {\r\n        return Object.keys(this.mMap);\r\n    }\r\n\r\n    static getManufacturerIds(name: string): string[] | null {\r\n        if (this.mMap[name]) {\r\n            return this.mMap[name].ids;\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    static removeManufacturer(name: string) {\r\n        if (this.mMap[name]) {\r\n            delete this.mMap[name];\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"script"}