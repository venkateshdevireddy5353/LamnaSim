{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Insight;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _styles = _interopRequireDefault(require(\"../styles\"));\n\nvar _footer = require(\"../components/footer\");\n\nvar _vitals_logo = _interopRequireDefault(require(\"../assets/vitals_logo.svg\"));\n\nvar _typography = require(\"../components/typography\");\n\nvar _reactNativeChartsWrapper = require(\"react-native-charts-wrapper\");\n\nvar _utils = require(\"../components/utils\");\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _config = require(\"../contexts/config\");\n\nvar _reactNativeGestureHandler = require(\"react-native-gesture-handler\");\n\nvar _reactNativePaper = require(\"react-native-paper\");\n\nvar _ble = require(\"../health/ble\");\n\nvar _common = require(\"../hooks/common\");\n\nvar _ui = require(\"../contexts/ui\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\venkatesh.devireddy\\\\Projects\\\\IoT_Central_CPM\\\\src\\\\screens\\\\insight.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar title = 'Health insights';\nvar summary = 'Your average body temperature is less than yesterday and your heart rate is nearly the same.';\nvar footer = 'This view is showing real-time data from the paired device or Google Fit data. To restart this sample walkthrough, exit and relaunch the app. To get started with building your own app, visit our GitHub repository.';\n\nfunction Insight() {\n  var _useContext = (0, _react.useContext)(_config.ConfigContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var _useContext2 = (0, _react.useContext)(_ui.UIContext),\n      uiDispatch = _useContext2.dispatch;\n\n  var _useState = (0, _react.useState)(Date.now()),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      start = _useState2[0],\n      setStart = _useState2[1];\n\n  var drawer = (0, _native.useNavigation)();\n\n  var _useState3 = (0, _react.useState)({\n    dataSets: []\n  }),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var timestamp = Date.now() - start;\n  (0, _common.useHeaderTitle)('Insight');\n\n  function updateData(item) {\n    var itemToProcess = [item];\n\n    if (typeof item.value !== 'string' && typeof item.value !== 'number') {\n      itemToProcess = Object.keys(item.value).map(function (i) {\n        return {\n          itemId: item.itemId + \".\" + i,\n          value: item.value[i],\n          itemName: item.itemName + \".\" + i\n        };\n      });\n    }\n\n    itemToProcess.forEach(function (itemdata) {\n      setData(function (currentDataSet) {\n        var currentItemData = currentDataSet.dataSets.find(function (d) {\n          return d.itemId === itemdata.itemId;\n        });\n        var newSample = {\n          x: Date.now() - start,\n          y: itemdata.value\n        };\n\n        if (!currentItemData) {\n          return _objectSpread(_objectSpread({}, currentDataSet), {}, {\n            dataSets: [].concat((0, _toConsumableArray2.default)(currentDataSet.dataSets), [{\n              itemId: itemdata.itemId,\n              values: [newSample],\n              label: itemdata.itemName ? itemdata.itemName : itemdata.itemId,\n              config: {\n                color: (0, _utils.getRandomColor)()\n              }\n            }])\n          });\n        }\n\n        return _objectSpread(_objectSpread({}, currentDataSet), {}, {\n          dataSets: currentDataSet.dataSets.map(function (_ref) {\n            var item = (0, _extends2.default)({}, _ref);\n\n            if (item.itemId === itemdata.itemId && item.values) {\n              item.values = [].concat((0, _toConsumableArray2.default)(item.values), [newSample]);\n            }\n\n            return item;\n          })\n        });\n      });\n    });\n  }\n\n  (0, _react.useEffect)(function () {\n    setStart(Date.now());\n    drawer.setParams({\n      title: 'Health Insight'\n    });\n    uiDispatch({\n      type: 'SET',\n      payload: {\n        right: function right() {\n          drawer.openDrawer();\n        }\n      }\n    });\n    drawer.openDrawer();\n  }, []);\n  (0, _react.useEffect)(function () {\n    if (state.device) {\n      state.device.addListener(_ble.DATA_AVAILABLE_EVENT, updateData);\n    }\n  }, [state.device]);\n  (0, _react.useEffect)(function () {\n    var unsubscribe = drawer.addListener('blur', function _callee() {\n      return _regenerator.default.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!state.device) {\n                _context.next = 4;\n                break;\n              }\n\n              _context.next = 3;\n              return _regenerator.default.awrap(state.device.disconnect());\n\n            case 3:\n              dispatch({\n                type: 'HEALTH_DISCONNECT',\n                payload: null\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n    return unsubscribe;\n  }, [drawer, state, dispatch]);\n\n  if (!state.device || data.dataSets.length === 0) {\n    return _react.default.createElement(_utils.Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    });\n  }\n\n  return _react.default.createElement(_reactNative.View, {\n    style: style.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: _objectSpread(_objectSpread({}, _styles.default.elevated), style.chart),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: {\n      flex: 1,\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, _react.default.createElement(_vitals_logo.default, {\n    style: {\n      marginHorizontal: 20,\n      padding: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }), _react.default.createElement(_reactNative.View, {\n    style: {\n      flexDirection: 'column'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }, _react.default.createElement(_typography.Headline, {\n    style: _styles.default.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 25\n    }\n  }, \"Vitals\"), _react.default.createElement(_typography.Detail, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 25\n    }\n  }, \"Today\"))), _react.default.createElement(_reactNativeChartsWrapper.LineChart, {\n    style: style.chartBox,\n    chartDescription: {\n      text: ''\n    },\n    touchEnabled: true,\n    dragEnabled: true,\n    scaleEnabled: true,\n    pinchZoom: true,\n    extraOffsets: {\n      bottom: 20\n    },\n    legend: {\n      wordWrapEnabled: true\n    },\n    xAxis: {\n      position: 'BOTTOM',\n      axisMaximum: timestamp + 500,\n      axisMinimum: timestamp - 10000,\n      valueFormatter: 'date',\n      since: start,\n      valueFormatterPattern: 'HH:mm:ss',\n      timeUnit: 'MILLISECONDS'\n    },\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }), _react.default.createElement(_reactNative.View, {\n    style: style.summary,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, _react.default.createElement(_typography.Detail, {\n    style: {\n      marginBottom: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 21\n    }\n  }, summary), _react.default.createElement(_reactNativeGestureHandler.TouchableOpacity, {\n    onPress: function onPress() {\n      drawer.openDrawer();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 21\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      marginLeft: -15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 25\n    }\n  }, _react.default.createElement(_reactNativePaper.IconButton, {\n    icon: \"chevron-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 29\n    }\n  }), _react.default.createElement(_typography.Name, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 29\n    }\n  }, \"SYNC OPTIONS\"))))), _react.default.createElement(_footer.Footer, {\n    text: footer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }));\n}\n\nvar style = _reactNative.StyleSheet.create({\n  container: {\n    flex: 6\n  },\n  chart: {\n    flex: 5,\n    marginTop: 20,\n    backgroundColor: 'white',\n    marginHorizontal: 5\n  },\n  chartBox: {\n    flex: 3,\n    backgroundColor: '#F3F2F1'\n  },\n  summary: {\n    flex: 1,\n    padding: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/venkatesh.devireddy/Projects/IoT_Central_CPM/src/screens/insight.tsx"],"names":["title","summary","footer","Insight","ConfigContext","state","dispatch","UIContext","uiDispatch","Date","now","start","setStart","drawer","dataSets","data","setData","timestamp","updateData","item","itemToProcess","value","Object","keys","map","i","itemId","itemName","forEach","itemdata","currentDataSet","currentItemData","find","d","newSample","x","y","values","label","config","color","setParams","type","payload","right","openDrawer","device","addListener","DATA_AVAILABLE_EVENT","unsubscribe","disconnect","length","style","container","DefaultStyles","elevated","chart","flex","flexDirection","alignItems","marginHorizontal","padding","header","chartBox","text","bottom","wordWrapEnabled","position","axisMaximum","axisMinimum","valueFormatter","since","valueFormatterPattern","timeUnit","marginBottom","marginLeft","StyleSheet","create","marginTop","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport { ItemData } from '../models';\r\nimport DefaultStyles from '../styles';\r\nimport { Footer } from '../components/footer';\r\nimport VitalsLogo from '../assets/vitals_logo.svg';\r\nimport { Detail, Headline, Name } from '../components/typography';\r\nimport { LineChart } from 'react-native-charts-wrapper';\r\nimport { Loading, getRandomColor, ErrorDialog } from '../components/utils';\r\nimport { ReactDispatch, DrawerProperty, ExtendedLineData } from '../types';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { ConfigContext } from '../contexts/config';\r\nimport { bleToIoTCName } from '../utils';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport { IconButton, Text } from 'react-native-paper';\r\nimport { DATA_AVAILABLE_EVENT } from '../health/ble';\r\nimport { useHeaderTitle } from '../hooks/common';\r\nimport { UIContext } from '../contexts/ui';\r\n\r\n\r\n\r\nconst title = 'Health insights';\r\nconst summary = 'Your average body temperature is less than yesterday and your heart rate is nearly the same.';\r\nconst footer = 'This view is showing real-time data from the paired device or Google Fit data. To restart this sample walkthrough, exit and relaunch the app. To get started with building your own app, visit our GitHub repository.';\r\n\r\n\r\n\r\n\r\nexport default function Insight() {\r\n    const { state, dispatch } = useContext(ConfigContext);\r\n    const { dispatch: uiDispatch } = useContext(UIContext);\r\n    const [start, setStart] = useState<number>(Date.now());\r\n    const drawer = useNavigation<DrawerProperty>();\r\n    const [data, setData] = useState<ExtendedLineData>({\r\n        dataSets: []\r\n    });\r\n    const timestamp = Date.now() - start;\r\n\r\n    useHeaderTitle('Insight');\r\n\r\n    // const timeoutLoading = useTimer(6);\r\n    // const [showError, setShowError] = useState(true);\r\n\r\n    /**\r\n * \r\n * @param itemdata Current sample for the item\r\n * @param startTime Start time of the sampling. Must be the same value used as \"since\" param in the chart\r\n * @param setData Dispatch to update dataset with current sample\r\n */\r\n    function updateData(item: ItemData) {\r\n        let itemToProcess: ItemData[] = [item];\r\n        if ((typeof item.value) !== 'string' && (typeof item.value) !== 'number') {\r\n            // data is composite\r\n            itemToProcess = Object.keys(item.value).map(i => ({\r\n                itemId: `${item.itemId}.${i}`,\r\n                value: item.value[i],\r\n                itemName: `${item.itemName}.${i}`\r\n            }));\r\n        }\r\n        itemToProcess.forEach(itemdata => {\r\n\r\n            setData(currentDataSet => {\r\n                let currentItemData = currentDataSet.dataSets.find(d => d.itemId === itemdata.itemId);\r\n\r\n                // Current sample time (x-axis) is the difference between current timestamp e the start time of sampling\r\n                const newSample = { x: Date.now() - start, y: itemdata.value };\r\n\r\n                if (!currentItemData) {\r\n                    // current item is not in the dataset yet\r\n                    return { ...currentDataSet, dataSets: [...currentDataSet.dataSets, ...[{ itemId: itemdata.itemId, values: [newSample], label: itemdata.itemName ? itemdata.itemName : itemdata.itemId, config: { color: getRandomColor() } }]] };\r\n                }\r\n                return {\r\n                    ...currentDataSet,\r\n                    dataSets: currentDataSet.dataSets.map(({ ...item }) => {\r\n                        if (item.itemId === itemdata.itemId && item.values) {\r\n                            item.values = [...item.values, ...[newSample]];\r\n                        }\r\n                        return item;\r\n                    })\r\n                }\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        setStart(Date.now());\r\n        drawer.setParams({\r\n            title: 'Health Insight'\r\n        });\r\n        uiDispatch({\r\n            type: 'SET',\r\n            payload: {\r\n                right: () => {\r\n                    drawer.openDrawer();\r\n                }\r\n            }\r\n        });\r\n        drawer.openDrawer();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (state.device) {\r\n            state.device.addListener(DATA_AVAILABLE_EVENT, updateData);\r\n        }\r\n    }, [state.device])\r\n\r\n    /**\r\n     * Manage component unmount. Remove all listeners\r\n     */\r\n    useEffect(() => {\r\n        const unsubscribe = drawer.addListener('blur', async () => {\r\n            if (state.device) {\r\n                await state.device.disconnect();\r\n\r\n                // send disconnection event\r\n                dispatch({\r\n                    type: 'HEALTH_DISCONNECT',\r\n                    payload: null\r\n                });\r\n            }\r\n        });\r\n        return unsubscribe;\r\n    }, [drawer, state, dispatch])\r\n\r\n    // if (timeoutLoading) {\r\n    //     return (<View style={style.container}>\r\n    //         <ErrorDialog visible={showError} title='Error' text='Timeout getting data from provider.' setVisible={setShowError} />\r\n    //     </View>)\r\n    // }\r\n    if (!state.device || data.dataSets.length === 0) {\r\n        return (<Loading />)\r\n    }\r\n\r\n    return (\r\n        <View style={style.container}>\r\n            <View style={{ ...DefaultStyles.elevated, ...style.chart }}>\r\n                <View style={{ flex: 1, flexDirection: 'row', alignItems: 'center' }}>\r\n                    <VitalsLogo style={{ marginHorizontal: 20, padding: 20 }} />\r\n                    <View style={{ flexDirection: 'column' }}>\r\n                        <Headline style={DefaultStyles.header}>Vitals</Headline>\r\n                        <Detail>Today</Detail>\r\n                    </View>\r\n                </View>\r\n                <LineChart style={style.chartBox} chartDescription={{ text: '' }}\r\n                    touchEnabled={true}\r\n                    dragEnabled={true}\r\n                    scaleEnabled={true}\r\n                    pinchZoom={true}\r\n                    extraOffsets={{ bottom: 20 }}\r\n                    legend={{ wordWrapEnabled: true }}\r\n                    xAxis={{\r\n                        position: 'BOTTOM',\r\n                        axisMaximum: timestamp + 500,\r\n                        axisMinimum: timestamp - 10000,\r\n                        valueFormatter: 'date',\r\n                        since: start,\r\n                        valueFormatterPattern: 'HH:mm:ss',\r\n                        timeUnit: 'MILLISECONDS'\r\n                    }}\r\n                    data={data} />\r\n                <View style={style.summary}>\r\n                    <Detail style={{ marginBottom: 20 }}>{summary}</Detail>\r\n                    <TouchableOpacity onPress={() => {\r\n                        drawer.openDrawer();\r\n                    }}>\r\n                        <View style={{ flexDirection: 'row', alignItems: 'center', marginLeft: -15 }}>\r\n                            <IconButton icon='chevron-right' />\r\n                            <Name>SYNC OPTIONS</Name>\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n            <Footer text={footer} />\r\n        </View>)\r\n}\r\n\r\nconst style = StyleSheet.create({\r\n    container: {\r\n        flex: 6\r\n    },\r\n    chart: {\r\n        flex: 5,\r\n        marginTop: 20,\r\n        backgroundColor: 'white',\r\n        marginHorizontal: 5\r\n    },\r\n    chartBox: {\r\n        flex: 3,\r\n        backgroundColor: '#F3F2F1'\r\n    },\r\n    summary: {\r\n        flex: 1,\r\n        padding: 20\r\n    }\r\n\r\n})"]},"metadata":{},"sourceType":"script"}