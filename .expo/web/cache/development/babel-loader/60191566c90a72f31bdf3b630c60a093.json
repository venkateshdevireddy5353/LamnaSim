{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Loading = Loading;\nexports.ErrorDialog = ErrorDialog;\nexports.GetConnectedHeader = GetConnectedHeader;\nexports.getRandomColor = getRandomColor;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativePaper = require(\"react-native-paper\");\n\nvar _typography = require(\"./typography\");\n\nvar _styles = _interopRequireDefault(require(\"../styles\"));\n\nvar _home_connected_icon = _interopRequireDefault(require(\"../assets/home_connected_icon.svg\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\venkatesh.devireddy\\\\Projects\\\\IoT_Central_CPM\\\\src\\\\components\\\\utils.tsx\";\n\nfunction Loading() {\n  return _react.default.createElement(_reactNative.View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNativePaper.ActivityIndicator, {\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }));\n}\n\nfunction ErrorDialog(props) {\n  var visible = props.visible,\n      setVisible = props.setVisible,\n      text = props.text,\n      title = props.title;\n  return _react.default.createElement(_reactNativePaper.Portal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNativePaper.Dialog, {\n    visible: visible,\n    onDismiss: function onDismiss() {\n      return setVisible(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNativePaper.Dialog.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, title), _react.default.createElement(_reactNativePaper.Dialog.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_typography.Detail, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, text)), _react.default.createElement(_reactNativePaper.Dialog.Actions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNativePaper.Button, {\n    onPress: function onPress() {\n      return setVisible(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, \"OK\"))));\n}\n\nfunction GetConnectedHeader() {\n  var header = 'Get connected';\n  var sub = 'Pair a device or sync your data';\n  return _react.default.createElement(_reactNative.View, {\n    style: {\n      flexDirection: 'row',\n      padding: 10,\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_home_connected_icon.default, {\n    style: {\n      marginHorizontal: 16,\n      marginVertical: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }), _react.default.createElement(_reactNative.View, {\n    style: {\n      flexDirection: 'column'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_typography.Headline, {\n    style: _styles.default.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, header), _react.default.createElement(_typography.Detail, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, sub)));\n}\n\nfunction getRandomColor() {\n  return (0, _reactNative.processColor)(\"rgb(\" + Math.floor(Math.random() * 256) + \",\" + Math.floor(Math.random() * 256) + \",\" + Math.floor(Math.random() * 256) + \")\");\n}","map":{"version":3,"sources":["C:/Users/venkatesh.devireddy/Projects/IoT_Central_CPM/src/components/utils.tsx"],"names":["Loading","flex","justifyContent","alignItems","ErrorDialog","props","visible","setVisible","text","title","GetConnectedHeader","header","sub","flexDirection","padding","marginHorizontal","marginVertical","DefaultStyles","getRandomColor","Math","floor","random"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { View, processColor } from 'react-native';\r\nimport { ActivityIndicator, Text, Portal, Dialog, Button } from 'react-native-paper';\r\nimport { Detail, Headline } from './typography';\r\nimport DefaultStyles from '../styles';\r\nimport GetConnected from '../assets/home_connected_icon.svg';\r\nimport { ReactDispatch } from '../types';\r\n\r\nexport function Loading() {\r\n    return (<View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n        <ActivityIndicator size='large' />\r\n    </View>)\r\n}\r\n\r\nexport function ErrorDialog(props: { visible: boolean, setVisible: ReactDispatch<boolean>, title: string, text: string }) {\r\n    const { visible, setVisible, text, title } = props;\r\n    return (<Portal>\r\n        <Dialog\r\n            visible={visible}\r\n            onDismiss={() => setVisible(false)}>\r\n            <Dialog.Title>{title}</Dialog.Title>\r\n            <Dialog.Content>\r\n                <Detail>{text}</Detail>\r\n            </Dialog.Content>\r\n            <Dialog.Actions>\r\n                <Button onPress={() => setVisible(false)}>OK</Button>\r\n            </Dialog.Actions>\r\n        </Dialog>\r\n    </Portal>)\r\n}\r\n\r\nexport function GetConnectedHeader() {\r\n    const header = 'Get connected';\r\n    const sub = 'Pair a device or sync your data';\r\n    return (\r\n        <View style={{ flexDirection: 'row', padding: 10, alignItems: 'center' }}>\r\n            <GetConnected style={{ marginHorizontal: 16, marginVertical: 10 }} />\r\n            <View style={{ flexDirection: 'column' }}>\r\n                <Headline style={DefaultStyles.header}>{header}</Headline>\r\n                <Detail>{sub}</Detail>\r\n            </View>\r\n        </View>)\r\n}\r\n\r\nexport function getRandomColor() {\r\n    return processColor(`rgb(${(Math.floor(Math.random() * 256))},${(Math.floor(Math.random() * 256))},${(Math.floor(Math.random() * 256))})`);\r\n}"]},"metadata":{},"sourceType":"script"}