{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SmartVitalsPatchDevice = exports.SmartKneeBraceDevice = exports.SimulatedDevice = exports.SimulatedHealthManager = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _models = require(\"../models\");\n\nvar _events = require(\"events\");\n\nvar _ble = require(\"./ble\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar SimulatedHealthManager = function () {\n  function SimulatedHealthManager() {\n    (0, _classCallCheck2.default)(this, SimulatedHealthManager);\n    this.devices = [new SmartKneeBraceDevice('00:11:22:33:44:55', 'Smart Knee Brace 1'), new SmartKneeBraceDevice('A0:39:42:FD:BA:AB', 'Smart Knee Brace 2'), new SmartKneeBraceDevice('0D:44:21:FF:37:AA', 'Smart Knee Brace 3'), new SmartVitalsPatchDevice('AB:8A:60:D3:83:16', 'Smart Vitals Patch 1'), new SmartVitalsPatchDevice('CE:2B:88:1A:32:03', 'Smart Vitals Patch 2'), new SmartVitalsPatchDevice('32:83:74:AA:CC:33', 'Smart Vitals Patch 3')];\n  }\n\n  (0, _createClass2.default)(SimulatedHealthManager, [{\n    key: \"startScan\",\n    value: function startScan(onDeviceFound) {\n      var count = 0;\n      this.currentScan = setInterval(function () {\n        if (count === this.devices.length) {\n          return;\n        }\n\n        onDeviceFound(this.devices[count]);\n        count++;\n      }.bind(this), 400);\n    }\n  }, {\n    key: \"stopScan\",\n    value: function stopScan() {\n      if (this.currentScan) {\n        clearInterval(this.currentScan);\n      }\n    }\n  }, {\n    key: \"connect\",\n    value: function connect(deviceId) {\n      var dev = this.devices.find(function (d) {\n        return d.id === deviceId;\n      });\n\n      if (!dev) {\n        return Promise.reject();\n      }\n\n      dev.connected = true;\n      return Promise.resolve(dev);\n    }\n  }]);\n  return SimulatedHealthManager;\n}();\n\nexports.SimulatedHealthManager = SimulatedHealthManager;\n\nvar SimulatedDevice = function () {\n  function SimulatedDevice(id, name) {\n    (0, _classCallCheck2.default)(this, SimulatedDevice);\n    this.id = id;\n    this.name = name;\n    this.type = 'simulated';\n    this.simulated = true;\n    this.paired = true;\n    this.enabled = {};\n    this.connected = false;\n    this.eventEmitter = new _events.EventEmitter();\n  }\n\n  (0, _createClass2.default)(SimulatedDevice, [{\n    key: \"addListener\",\n    value: function addListener(eventType, listener, context) {\n      this.eventEmitter.addListener(eventType, listener);\n    }\n  }, {\n    key: \"removeListener\",\n    value: function removeListener(eventType, listener) {\n      this.eventEmitter.removeListener(eventType, listener);\n    }\n  }, {\n    key: \"enableItem\",\n    value: function enableItem(item, status) {\n      return _regenerator.default.async(function enableItem$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!status) {\n                _context.next = 8;\n                break;\n              }\n\n              if (!this.enabled[item.id]) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\", true);\n\n            case 3:\n              this.enabled[item.id] = setInterval(function () {\n                this.eventEmitter.emit(_ble.DATA_AVAILABLE_EVENT, {\n                  itemId: item.id,\n                  value: item.getData ? item.getData() : Math.floor(Math.random() * 40),\n                  itemName: item.name\n                });\n              }.bind(this), 5000);\n              item.enabled = true;\n              return _context.abrupt(\"return\", true);\n\n            case 8:\n              if (this.enabled[item.id]) {\n                clearInterval(this.enabled[item.id]);\n                delete this.enabled[item.id];\n              }\n\n              item.enabled = false;\n              return _context.abrupt(\"return\", false);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"fetch\",\n    value: function fetch() {\n      var _this = this;\n\n      var fetchedItems;\n      return _regenerator.default.async(function fetch$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              fetchedItems = [{\n                id: '00002A1C-0000-1000-8000-00805f9b34fb',\n                name: 'Temperature',\n                parentId: '00001809-0000-1000-8000-00805f9b34fb',\n                enabled: (0, _models.isHealthService)('00001809-0000-1000-8000-00805f9b34fb'),\n                value: undefined\n              }, {\n                id: '00002A37-0000-1000-8000-00805f9b34fb',\n                parentId: '0000180D-0000-1000-8000-00805f9b34fb',\n                name: 'Heart Rate',\n                enabled: (0, _models.isHealthService)('0000180D-0000-1000-8000-00805f9b34fb'),\n                value: undefined\n              }, {\n                id: '00002A35-0000-1000-8000-00805f9b34fb',\n                name: 'Blood pressure',\n                parentId: '00001810-0000-1000-8000-00805f9b34fb',\n                enabled: (0, _models.isHealthService)('00001810-0000-1000-8000-00805f9b34fb'),\n                value: undefined\n              }];\n              fetchedItems.map(function (i) {\n                i.enable = function (status) {\n                  return this.enableItem(i, status);\n                }.bind(_this);\n              }, this);\n              this.items = fetchedItems;\n              this.items.forEach(function (item) {\n                if (item.enabled) {\n                  item.enable(true);\n                }\n              });\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      var _this2 = this;\n\n      return _regenerator.default.async(function disconnect$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!(this.enabled && this.items)) {\n                _context3.next = 3;\n                break;\n              }\n\n              Object.keys(this.enabled).forEach(function (enabledItem) {\n                clearInterval(_this2.enabled[enabledItem]);\n\n                var currentItem = _this2.items.find(function (i) {\n                  return i.id === enabledItem;\n                });\n\n                if (currentItem) {\n                  currentItem.enabled = false;\n                }\n\n                delete _this2.enabled[enabledItem];\n              }, this);\n              return _context3.abrupt(\"return\", Promise.resolve());\n\n            case 3:\n              this.eventEmitter.removeAllListeners(_ble.DATA_AVAILABLE_EVENT);\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }]);\n  return SimulatedDevice;\n}();\n\nexports.SimulatedDevice = SimulatedDevice;\n\nvar SmartKneeBraceDevice = function (_SimulatedDevice) {\n  (0, _inherits2.default)(SmartKneeBraceDevice, _SimulatedDevice);\n\n  var _super = _createSuper(SmartKneeBraceDevice);\n\n  function SmartKneeBraceDevice() {\n    (0, _classCallCheck2.default)(this, SmartKneeBraceDevice);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(SmartKneeBraceDevice, [{\n    key: \"fetch\",\n    value: function fetch() {\n      var _this3 = this;\n\n      var fetchedItems;\n      return _regenerator.default.async(function fetch$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              fetchedItems = [{\n                id: 'Acceleration',\n                name: 'Acceleration',\n                parentId: '00001809-0000-1000-8000-00805f9b34fb',\n                enabled: (0, _models.isHealthService)('00001809-0000-1000-8000-00805f9b34fb'),\n                value: undefined,\n                getData: function getData() {\n                  return {\n                    x: Math.floor(Math.random() * 40),\n                    y: Math.floor(Math.random() * 40),\n                    z: Math.floor(Math.random() * 40)\n                  };\n                }\n              }, {\n                id: 'RangeOfMotion',\n                parentId: '0000180D-0000-1000-8000-00805f9b34fb',\n                name: 'Range of motion',\n                enabled: (0, _models.isHealthService)('0000180D-0000-1000-8000-00805f9b34fb'),\n                value: undefined,\n                getData: function getData() {\n                  return Math.floor(Math.random() * 40);\n                }\n              }, {\n                id: 'KneeBend',\n                name: 'Knee bend',\n                parentId: '00001810-0000-1000-8000-00805f9b34fb',\n                enabled: (0, _models.isHealthService)('00001810-0000-1000-8000-00805f9b34fb'),\n                value: undefined,\n                getData: function getData() {\n                  return Math.floor(Math.random() * 40);\n                }\n              }, {\n                id: 'DeviceTemperature',\n                name: 'Device Temperature',\n                parentId: '00001810-0000-1000-8000-00805f9b34fb',\n                enabled: (0, _models.isHealthService)('00001810-0000-1000-8000-00805f9b34fb'),\n                value: undefined,\n                getData: function getData() {\n                  return Math.floor(Math.random() * 40);\n                }\n              }, {\n                id: 'BatteryLevel',\n                name: 'Battery Level',\n                parentId: '00001810-0000-1000-8000-00805f9b34fb',\n                enabled: (0, _models.isHealthService)('00001810-0000-1000-8000-00805f9b34fb'),\n                value: undefined,\n                getData: function getData() {\n                  return Math.floor(Math.random() * 40);\n                }\n              }];\n              fetchedItems.map(function (i) {\n                i.enable = function (status) {\n                  return this.enableItem(i, status);\n                }.bind(_this3);\n              }, this);\n              this.items = fetchedItems;\n              this.items.forEach(function (item) {\n                if (item.enabled) {\n                  item.enable(true);\n                }\n              });\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }]);\n  return SmartKneeBraceDevice;\n}(SimulatedDevice);\n\nexports.SmartKneeBraceDevice = SmartKneeBraceDevice;\n\nvar SmartVitalsPatchDevice = function (_SimulatedDevice2) {\n  (0, _inherits2.default)(SmartVitalsPatchDevice, _SimulatedDevice2);\n\n  var _super2 = _createSuper(SmartVitalsPatchDevice);\n\n  function SmartVitalsPatchDevice() {\n    (0, _classCallCheck2.default)(this, SmartVitalsPatchDevice);\n    return _super2.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(SmartVitalsPatchDevice, [{\n    key: \"fetch\",\n    value: function fetch() {\n      var _this4 = this;\n\n      var fetchedItems;\n      return _regenerator.default.async(function fetch$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              fetchedItems = [{\n                id: 'HeartRate',\n                name: 'Heart Rate',\n                parentId: '00001809-0000-1000-8000-00805f9b34fb',\n                enabled: (0, _models.isHealthService)('00001809-0000-1000-8000-00805f9b34fb'),\n                value: undefined,\n                getData: function getData() {\n                  return Math.floor(Math.random() * 40);\n                }\n              }, {\n                id: 'RespiratoryRate',\n                parentId: '0000180D-0000-1000-8000-00805f9b34fb',\n                name: 'Respiratory Rate',\n                enabled: (0, _models.isHealthService)('0000180D-0000-1000-8000-00805f9b34fb'),\n                value: undefined,\n                getData: function getData() {\n                  return Math.floor(Math.random() * 40);\n                }\n              }, {\n                id: 'HeartRateVariability',\n                name: 'Heart rate variability',\n                parentId: '00001810-0000-1000-8000-00805f9b34fb',\n                enabled: (0, _models.isHealthService)('00001810-0000-1000-8000-00805f9b34fb'),\n                value: undefined,\n                getData: function getData() {\n                  return Math.floor(Math.random() * 40);\n                }\n              }, {\n                id: 'BodyTemperature',\n                name: 'Body temperature',\n                parentId: '00001810-0000-1000-8000-00805f9b34fb',\n                enabled: (0, _models.isHealthService)('00001810-0000-1000-8000-00805f9b34fb'),\n                value: undefined,\n                getData: function getData() {\n                  return Math.random() * 40;\n                }\n              }, {\n                id: 'DeviceTemperature',\n                name: 'Device Temperature',\n                parentId: '00001810-0000-1000-8000-00805f9b34fb',\n                enabled: (0, _models.isHealthService)('00001810-0000-1000-8000-00805f9b34fb'),\n                value: undefined,\n                getData: function getData() {\n                  return Math.random() * 40;\n                }\n              }, {\n                id: 'BatteryLevel',\n                name: 'Battery Level',\n                parentId: '00001810-0000-1000-8000-00805f9b34fb',\n                enabled: (0, _models.isHealthService)('00001810-0000-1000-8000-00805f9b34fb'),\n                value: undefined,\n                getData: function getData() {\n                  return Math.random() * 40;\n                }\n              }];\n              fetchedItems.map(function (i) {\n                i.enable = function (status) {\n                  return this.enableItem(i, status);\n                }.bind(_this4);\n              }, this);\n              this.items = fetchedItems;\n              this.items.forEach(function (item) {\n                if (item.enabled) {\n                  item.enable(true);\n                }\n              });\n\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }]);\n  return SmartVitalsPatchDevice;\n}(SimulatedDevice);\n\nexports.SmartVitalsPatchDevice = SmartVitalsPatchDevice;","map":{"version":3,"sources":["C:/Users/venkatesh.devireddy/Projects/IoT_Central_CPM/src/health/simulated.ts"],"names":["SimulatedHealthManager","devices","SmartKneeBraceDevice","SmartVitalsPatchDevice","onDeviceFound","count","currentScan","setInterval","length","bind","clearInterval","deviceId","dev","find","d","id","Promise","reject","connected","resolve","SimulatedDevice","name","type","simulated","paired","enabled","eventEmitter","EventEmitter","eventType","listener","context","addListener","removeListener","item","status","emit","DATA_AVAILABLE_EVENT","itemId","value","getData","Math","floor","random","itemName","fetchedItems","parentId","undefined","map","i","enable","enableItem","items","forEach","Object","keys","enabledItem","currentItem","removeAllListeners","x","y","z"],"mappings":"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","sourcesContent":["import { IHealthDevice, IHealthItem, IHealthManager, DataAvailableCallback, DeviceType, isHealthService } from \"../models\";\r\nimport { EventEmitter } from \"events\";\r\nimport { DATA_AVAILABLE_EVENT } from \"./ble\";\r\n\r\nexport class SimulatedHealthManager implements IHealthManager {\r\n\r\n    private devices: IHealthDevice[] = [\r\n        new SmartKneeBraceDevice('00:11:22:33:44:55', 'Smart Knee Brace 1'),\r\n        new SmartKneeBraceDevice('A0:39:42:FD:BA:AB', 'Smart Knee Brace 2'),\r\n        new SmartKneeBraceDevice('0D:44:21:FF:37:AA', 'Smart Knee Brace 3'),\r\n        new SmartVitalsPatchDevice('AB:8A:60:D3:83:16', 'Smart Vitals Patch 1'),\r\n        new SmartVitalsPatchDevice('CE:2B:88:1A:32:03', 'Smart Vitals Patch 2'),\r\n        new SmartVitalsPatchDevice('32:83:74:AA:CC:33', 'Smart Vitals Patch 3'),\r\n    ];\r\n\r\n    /**\r\n     * hold the interval id for the current scan in progress\r\n     */\r\n    private currentScan: number | undefined;\r\n    startScan(onDeviceFound: (device: IHealthDevice) => void): void {\r\n        let count = 0\r\n        // @ts-ignore\r\n        // sometimes setInterval gets typings from node instead of react-native\r\n        this.currentScan = setInterval(function (this: SimulatedHealthManager) {\r\n            if (count === this.devices.length) {\r\n                return;\r\n            }\r\n            onDeviceFound(this.devices[count])\r\n            count++;\r\n        }.bind(this), 400);\r\n    }\r\n    stopScan(): void {\r\n        if (this.currentScan) {\r\n            clearInterval(this.currentScan);\r\n        }\r\n    }\r\n    connect(deviceId: string): Promise<IHealthDevice> {\r\n        const dev = this.devices.find(d => d.id === deviceId);\r\n        if (!dev) {\r\n            return Promise.reject();\r\n        }\r\n        dev.connected = true;\r\n        return Promise.resolve(dev);\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class SimulatedDevice implements Omit<IHealthDevice, 'fetch'> {\r\n    public paired: boolean;\r\n    public connected: boolean;\r\n    public simulated: boolean;\r\n    public items: IHealthItem[] | undefined;\r\n    private eventEmitter: EventEmitter;\r\n    public type: DeviceType = 'simulated';\r\n    /**\r\n     * keeps track of the running simulated items.\r\n     * The value of each item represents the interval Id to stop simulation\r\n     * through clearInterval\r\n     */\r\n    private enabled: { [itemId: string]: number };\r\n\r\n    constructor(public id: string, public name: string) {\r\n        this.simulated = true;\r\n        this.paired = true;\r\n        this.enabled = {};\r\n        this.connected = false;\r\n        this.eventEmitter = new EventEmitter();\r\n    }\r\n    addListener(eventType: string, listener: (...args: any[]) => any, context?: any) {\r\n        this.eventEmitter.addListener(eventType, listener)\r\n    }\r\n    removeListener(eventType: string, listener: (...args: any[]) => any) {\r\n        this.eventEmitter.removeListener(eventType, listener);\r\n    }\r\n\r\n    protected async enableItem(item: IHealthItem, status: boolean): Promise<boolean> {\r\n        if (status) {\r\n            if (this.enabled[item.id]) {\r\n                return true;\r\n            }\r\n            // @ts-ignore\r\n            // sometimes setInterval gets typings from node instead of react-native\r\n            this.enabled[item.id] = setInterval(function (this: SimulatedDevice) {\r\n                // if (onDataAvailable) {\r\n                //     onDataAvailable(item.id, Math.floor(Math.random() * 40), item.name);\r\n                // }\r\n                this.eventEmitter.emit(DATA_AVAILABLE_EVENT, { itemId: item.id, value: (item.getData ? item.getData() : Math.floor(Math.random() * 40)), itemName: item.name });\r\n            }.bind(this), 5000);\r\n            item.enabled = true;\r\n            return true;\r\n        }\r\n        else {\r\n            if (this.enabled[item.id]) {\r\n                clearInterval(this.enabled[item.id]);\r\n                delete this.enabled[item.id];\r\n            }\r\n            item.enabled = false;\r\n            return false;\r\n        }\r\n    }\r\n\r\n    protected async fetch() {\r\n        let fetchedItems: any[] = [{\r\n            id: '00002A1C-0000-1000-8000-00805f9b34fb',\r\n            name: 'Temperature',\r\n            parentId: '00001809-0000-1000-8000-00805f9b34fb',\r\n            enabled: isHealthService('00001809-0000-1000-8000-00805f9b34fb'),\r\n            value: undefined\r\n        },\r\n        {\r\n            id: '00002A37-0000-1000-8000-00805f9b34fb',\r\n            parentId: '0000180D-0000-1000-8000-00805f9b34fb',\r\n            name: 'Heart Rate',\r\n            enabled: isHealthService('0000180D-0000-1000-8000-00805f9b34fb'),\r\n            value: undefined\r\n        },\r\n        {\r\n            id: '00002A35-0000-1000-8000-00805f9b34fb',\r\n            name: 'Blood pressure',\r\n            parentId: '00001810-0000-1000-8000-00805f9b34fb',\r\n            enabled: isHealthService('00001810-0000-1000-8000-00805f9b34fb'),\r\n            value: undefined\r\n        }];\r\n        fetchedItems.map(i => {\r\n            i.enable = function (this: SimulatedDevice, status: boolean) {\r\n                return this.enableItem(i, status);\r\n            }.bind(this);\r\n        }, this);\r\n        this.items = fetchedItems;\r\n        this.items.forEach(item => {\r\n            if (item.enabled) {\r\n                item.enable(true);\r\n            }\r\n        });\r\n    }\r\n    public async disconnect() {\r\n        // loop through listeners\r\n        if (this.enabled && this.items) {\r\n            Object.keys(this.enabled).forEach(enabledItem => {\r\n                clearInterval(this.enabled[enabledItem]);\r\n                const currentItem = (this.items as IHealthItem[]).find(i => i.id === enabledItem);\r\n                if (currentItem) {\r\n                    currentItem.enabled = false;\r\n                }\r\n                delete this.enabled[enabledItem];\r\n            }, this);\r\n            return Promise.resolve();\r\n        }\r\n        this.eventEmitter.removeAllListeners(DATA_AVAILABLE_EVENT);\r\n    }\r\n\r\n}\r\n\r\nexport class SmartKneeBraceDevice extends SimulatedDevice implements IHealthDevice {\r\n    public async fetch() {\r\n        let fetchedItems: any[] = [\r\n            {\r\n                id: 'Acceleration',\r\n                name: 'Acceleration',\r\n                parentId: '00001809-0000-1000-8000-00805f9b34fb',\r\n                enabled: isHealthService('00001809-0000-1000-8000-00805f9b34fb'),\r\n                value: undefined,\r\n                getData: function () {\r\n                    return {\r\n                        x: Math.floor(Math.random() * 40),\r\n                        y: Math.floor(Math.random() * 40),\r\n                        z: Math.floor(Math.random() * 40)\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                id: 'RangeOfMotion',\r\n                parentId: '0000180D-0000-1000-8000-00805f9b34fb',\r\n                name: 'Range of motion',\r\n                enabled: isHealthService('0000180D-0000-1000-8000-00805f9b34fb'),\r\n                value: undefined,\r\n                getData: function () {\r\n                    return Math.floor(Math.random() * 40)\r\n                }\r\n            },\r\n            {\r\n                id: 'KneeBend',\r\n                name: 'Knee bend',\r\n                parentId: '00001810-0000-1000-8000-00805f9b34fb',\r\n                enabled: isHealthService('00001810-0000-1000-8000-00805f9b34fb'),\r\n                value: undefined,\r\n                getData: function () {\r\n                    return Math.floor(Math.random() * 40)\r\n                }\r\n            },\r\n            {\r\n                id: 'DeviceTemperature',\r\n                name: 'Device Temperature',\r\n                parentId: '00001810-0000-1000-8000-00805f9b34fb',\r\n                enabled: isHealthService('00001810-0000-1000-8000-00805f9b34fb'),\r\n                value: undefined,\r\n                getData: function () {\r\n                    return Math.floor(Math.random() * 40)\r\n                }\r\n            },\r\n            {\r\n                id: 'BatteryLevel',\r\n                name: 'Battery Level',\r\n                parentId: '00001810-0000-1000-8000-00805f9b34fb',\r\n                enabled: isHealthService('00001810-0000-1000-8000-00805f9b34fb'),\r\n                value: undefined,\r\n                getData: function () {\r\n                    return Math.floor(Math.random() * 40)\r\n                }\r\n            }];\r\n        fetchedItems.map(i => {\r\n            i.enable = function (this: SmartKneeBraceDevice, status: boolean) {\r\n                return this.enableItem(i, status);\r\n            }.bind(this);\r\n        }, this);\r\n        this.items = fetchedItems;\r\n        this.items.forEach(item => {\r\n            if (item.enabled) {\r\n                item.enable(true);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport class SmartVitalsPatchDevice extends SimulatedDevice implements IHealthDevice {\r\n    public async fetch() {\r\n        let fetchedItems: any[] = [{\r\n            id: 'HeartRate',\r\n            name: 'Heart Rate',\r\n            parentId: '00001809-0000-1000-8000-00805f9b34fb',\r\n            enabled: isHealthService('00001809-0000-1000-8000-00805f9b34fb'),\r\n            value: undefined,\r\n            getData: function () {\r\n                return Math.floor(Math.random() * 40)\r\n            }\r\n        },\r\n        {\r\n            id: 'RespiratoryRate',\r\n            parentId: '0000180D-0000-1000-8000-00805f9b34fb',\r\n            name: 'Respiratory Rate',\r\n            enabled: isHealthService('0000180D-0000-1000-8000-00805f9b34fb'),\r\n            value: undefined,\r\n            getData: function () {\r\n                return Math.floor(Math.random() * 40)\r\n            }\r\n        },\r\n        {\r\n            id: 'HeartRateVariability',\r\n            name: 'Heart rate variability',\r\n            parentId: '00001810-0000-1000-8000-00805f9b34fb',\r\n            enabled: isHealthService('00001810-0000-1000-8000-00805f9b34fb'),\r\n            value: undefined,\r\n            getData: function () {\r\n                return Math.floor(Math.random() * 40)\r\n            }\r\n        },\r\n        {\r\n            id: 'BodyTemperature',\r\n            name: 'Body temperature',\r\n            parentId: '00001810-0000-1000-8000-00805f9b34fb',\r\n            enabled: isHealthService('00001810-0000-1000-8000-00805f9b34fb'),\r\n            value: undefined,\r\n            getData: function () {\r\n                return Math.random() * 40\r\n            }\r\n        },\r\n        {\r\n            id: 'DeviceTemperature',\r\n            name: 'Device Temperature',\r\n            parentId: '00001810-0000-1000-8000-00805f9b34fb',\r\n            enabled: isHealthService('00001810-0000-1000-8000-00805f9b34fb'),\r\n            value: undefined,\r\n            getData: function () {\r\n                return Math.random() * 40\r\n            }\r\n        },\r\n        {\r\n            id: 'BatteryLevel',\r\n            name: 'Battery Level',\r\n            parentId: '00001810-0000-1000-8000-00805f9b34fb',\r\n            enabled: isHealthService('00001810-0000-1000-8000-00805f9b34fb'),\r\n            value: undefined,\r\n            getData: function () {\r\n                return Math.random() * 40\r\n            }\r\n        }];\r\n        fetchedItems.map(i => {\r\n            i.enable = function (this: SmartVitalsPatchDevice, status: boolean) {\r\n                return this.enableItem(i, status);\r\n            }.bind(this);\r\n        }, this);\r\n        this.items = fetchedItems;\r\n        this.items.forEach(item => {\r\n            if (item.enabled) {\r\n                item.enable(true);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"script"}