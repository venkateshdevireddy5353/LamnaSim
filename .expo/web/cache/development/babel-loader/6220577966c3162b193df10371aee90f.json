{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ConsoleLogger = void 0;\n\nvar constants_1 = require(\"./types/constants\");\n\nvar ConsoleLogger = function () {\n  function ConsoleLogger() {\n    var loggerLevel = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : constants_1.IOTC_LOGGING.DISABLED;\n\n    _classCallCheck(this, ConsoleLogger);\n\n    this.loggerLevel = loggerLevel;\n  }\n\n  _createClass(ConsoleLogger, [{\n    key: \"setLogLevel\",\n    value: function setLogLevel(logLevel) {\n      if (typeof logLevel == \"string\") {\n        this.loggerLevel = constants_1.IOTC_LOGGING[logLevel.toUpperCase()];\n\n        if (!this.loggerLevel) {\n          console.error(\"LoggingLevel \" + logLevel + \" is unsupported.\\nSupported levels: \" + Object.keys(constants_1.IOTC_LOGGING).join(\",\"));\n          throw new Error();\n        }\n      } else {\n        this.loggerLevel = logLevel;\n      }\n    }\n  }, {\n    key: \"debug\",\n    value: function debug(message, tag) {\n      if (this.loggerLevel === constants_1.IOTC_LOGGING.ALL) {\n        console.log(\"DEBUG\" + (tag ? \" - \" + tag.toUpperCase() : \"\") + \": \" + message);\n      }\n    }\n  }, {\n    key: \"log\",\n    value: function log(message, tag) {\n      if (this.loggerLevel != constants_1.IOTC_LOGGING.DISABLED) console.log(\"INFO\" + (tag ? \" - \" + tag.toUpperCase() : \"\") + \": \" + message);\n    }\n  }]);\n\n  return ConsoleLogger;\n}();\n\nexports.ConsoleLogger = ConsoleLogger;","map":{"version":3,"sources":["../src/consoleLogger.ts"],"names":[],"mappings":";;;;;;;;;;;AAGA,IAAA,WAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;IAEa,a;AAiBX,2BAAqE;AAAA,QAAjD,WAAiD,uEAArB,WAAA,CAAA,YAAA,CAAa,QAAQ;;AAAA;;AAAjD,SAAA,WAAA,GAAA,WAAA;AAAqD;;;;WAhBzE,qBAAY,QAAZ,EAA2C;AACzC,UAAI,OAAO,QAAP,IAAmB,QAAvB,EAAiC;AAC/B,aAAK,WAAL,GACE,WAAA,CAAA,YAAA,CAAa,QAAQ,CAAC,WAAT,EAAb,CADF;;AAEA,YAAI,CAAC,KAAK,WAAV,EAAuB;AACrB,UAAA,OAAO,CAAC,KAAR,mBACkB,QADlB,4CACiE,MAAM,CAAC,IAAP,CAC7D,WAAA,CAAA,YAD6D,EAE7D,IAF6D,CAExD,GAFwD,CADjE;AAKA,gBAAM,IAAI,KAAJ,EAAN;AACD;AACF,OAXD,MAWO;AACL,aAAK,WAAL,GAAmB,QAAnB;AACD;AACF;;;WAED,eAAM,OAAN,EAAuB,GAAvB,EAAmC;AACjC,UAAI,KAAK,WAAL,KAAqB,WAAA,CAAA,YAAA,CAAa,GAAtC,EAA2C;AACzC,QAAA,OAAO,CAAC,GAAR,YAAoB,GAAG,WAAS,GAAG,CAAC,WAAJ,EAAT,GAA+B,EAAtD,WAA6D,OAA7D;AACD;AACF;;;WACD,aAAI,OAAJ,EAAqB,GAArB,EAAiC;AAC/B,UAAI,KAAK,WAAL,IAAoB,WAAA,CAAA,YAAA,CAAa,QAArC,EACE,OAAO,CAAC,GAAR,WAAmB,GAAG,WAAS,GAAG,CAAC,WAAJ,EAAT,GAA+B,EAArD,WAA4D,OAA5D;AACH;;;;;;AA1BH,OAAA,CAAA,aAAA,GAAA,aAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConsoleLogger = void 0;\nconst constants_1 = require(\"./types/constants\");\nclass ConsoleLogger {\n    constructor(loggerLevel = constants_1.IOTC_LOGGING.DISABLED) {\n        this.loggerLevel = loggerLevel;\n    }\n    setLogLevel(logLevel) {\n        if (typeof logLevel == \"string\") {\n            this.loggerLevel =\n                constants_1.IOTC_LOGGING[logLevel.toUpperCase()];\n            if (!this.loggerLevel) {\n                console.error(`LoggingLevel ${logLevel} is unsupported.\\nSupported levels: ${Object.keys(constants_1.IOTC_LOGGING).join(\",\")}`);\n                throw new Error();\n            }\n        }\n        else {\n            this.loggerLevel = logLevel;\n        }\n    }\n    debug(message, tag) {\n        if (this.loggerLevel === constants_1.IOTC_LOGGING.ALL) {\n            console.log(`DEBUG${tag ? ` - ${tag.toUpperCase()}` : \"\"}: ${message}`);\n        }\n    }\n    log(message, tag) {\n        if (this.loggerLevel != constants_1.IOTC_LOGGING.DISABLED)\n            console.log(`INFO${tag ? ` - ${tag.toUpperCase()}` : \"\"}: ${message}`);\n    }\n}\nexports.ConsoleLogger = ConsoleLogger;\n//# sourceMappingURL=consoleLogger.js.map"]},"metadata":{},"sourceType":"script"}