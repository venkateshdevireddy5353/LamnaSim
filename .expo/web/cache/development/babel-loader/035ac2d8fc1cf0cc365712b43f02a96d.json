{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Login;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativePaper = require(\"react-native-paper\");\n\nvar _footer = require(\"../components/footer\");\n\nvar _logo_title = _interopRequireDefault(require(\"../assets/logo_title.svg\"));\n\nvar _reactNativeLinearGradient = _interopRequireDefault(require(\"react-native-linear-gradient\"));\n\nvar _auth = require(\"../api/auth\");\n\nvar _auth2 = require(\"../hooks/auth\");\n\nvar _typography = require(\"../components/typography\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\venkatesh.devireddy\\\\Projects\\\\IoT_Central_CPM\\\\src\\\\screens\\\\login.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar footerText = 'This generates and stores the patient ID information that will be mapped to a device in the Azure API for FHIR.';\nvar forgot_passord = 'Forgot password?';\nvar title = 'Welcome to connected care.';\nvar theme = {\n  colors: {\n    placeholder: 'white',\n    text: 'white'\n  }\n};\n\nfunction Login() {\n  var _useUser = (0, _auth2.useUser)(),\n      _useUser2 = (0, _slicedToArray2.default)(_useUser, 2),\n      user = _useUser2[0],\n      setUser = _useUser2[1];\n\n  if (user) {\n    return null;\n  }\n\n  return _react.default.createElement(_reactNativeLinearGradient.default, {\n    colors: ['#00B1FF', '#42B3B3'],\n    style: style.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(Logo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }), _react.default.createElement(Form, {\n    onSubmit: function _callee(user, password) {\n      var providerId;\n      return _regenerator.default.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regenerator.default.awrap((0, _auth.login)(user, password));\n\n            case 2:\n              providerId = _context.sent;\n              setUser({\n                id: providerId\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }), _react.default.createElement(_footer.Footer, {\n    text: footerText,\n    textColor: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }));\n}\n\nfunction Logo() {\n  return _react.default.createElement(_reactNative.View, {\n    style: style.logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_logo_title.default, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(_reactNativePaper.Text, {\n    theme: theme,\n    style: style.logoSub,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, title));\n}\n\nfunction Form(props) {\n  var _useState = (0, _react.useState)(''),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(''),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  return _react.default.createElement(_reactNative.View, {\n    style: style.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(Input, {\n    name: \"Username\",\n    value: username,\n    setValue: setUsername,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(Input, {\n    name: \"Password\",\n    hidden: true,\n    value: password,\n    setValue: setPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(_typography.CPMText, {\n    style: _objectSpread(_objectSpread({}, style.forgot), style.text),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, forgot_passord), _react.default.createElement(_reactNativePaper.Button, {\n    mode: \"outlined\",\n    style: style.button,\n    onPress: function onPress() {\n      return props.onSubmit(username, password);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Login\"));\n}\n\nfunction Input(props) {\n  var _useState5 = (0, _react.useState)(false),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      focus = _useState6[0],\n      setFocus = _useState6[1];\n\n  return _react.default.createElement(_reactNativePaper.TextInput, {\n    secureTextEntry: props.hidden,\n    style: style.text,\n    placeholder: focus ? '' : props.name,\n    value: props.value,\n    onChangeText: function onChangeText(text) {\n      return props.setValue(text);\n    },\n    underlineColor: \"white\",\n    theme: theme,\n    onFocus: function onFocus() {\n      return setFocus(true);\n    },\n    onBlur: function onBlur() {\n      return setFocus(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  });\n}\n\nvar style = _reactNative.StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    flex: 1\n  },\n  logo: {\n    flex: 2,\n    alignItems: 'center',\n    justifyContent: 'space-evenly'\n  },\n  logoSub: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: 'white'\n  },\n  form: {\n    width: '80%',\n    flex: 2,\n    alignItems: 'center'\n  },\n  forgot: {\n    textAlign: 'right',\n    marginTop: 6\n  },\n  text: {\n    color: 'white',\n    width: '100%',\n    backgroundColor: 'transparent'\n  },\n  button: {\n    width: 120,\n    marginVertical: 50,\n    backgroundColor: 'white'\n  }\n});","map":{"version":3,"sources":["C:/Users/venkatesh.devireddy/Projects/IoT_Central_CPM/src/screens/login.tsx"],"names":["footerText","forgot_passord","title","theme","colors","placeholder","text","Login","user","setUser","style","container","password","providerId","id","Logo","logo","logoSub","Form","props","username","setUsername","setPassword","form","forgot","button","onSubmit","Input","focus","setFocus","hidden","name","value","setValue","StyleSheet","create","alignItems","flex","justifyContent","fontSize","fontWeight","color","width","textAlign","marginTop","backgroundColor","marginVertical"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useRef } from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport { TextInput, Text, Button, Appbar } from 'react-native-paper';\r\nimport { Footer } from '../components/footer';\r\nimport LogoTitle from '../assets/logo_title.svg';\r\nimport LinearGradient from 'react-native-linear-gradient';\r\nimport { login } from '../api/auth';\r\nimport { useUser } from '../hooks/auth';\r\nimport { ReactDispatch } from '../types';\r\nimport { CPMText } from '../components/typography';\r\n\r\nconst footerText = 'This generates and stores the patient ID information that will be mapped to a device in the Azure API for FHIR.';\r\nconst forgot_passord = 'Forgot password?'\r\nconst title = 'Welcome to connected care.';\r\n\r\nconst theme = {\r\n    colors: { placeholder: 'white', text: 'white' }\r\n}\r\n\r\n\r\nexport default function Login() {\r\n    const [user, setUser] = useUser();\r\n    if (user) {\r\n        return (null);\r\n    }\r\n    return (\r\n        <LinearGradient colors={['#00B1FF', '#42B3B3']} style={style.container}>\r\n            <Logo />\r\n            <Form onSubmit={async (user, password) => {\r\n                const providerId = await login(user, password);\r\n                setUser({ id: providerId });\r\n            }} />\r\n            <Footer text={footerText} textColor='white' />\r\n        </LinearGradient>\r\n    );\r\n}\r\n\r\nfunction Logo() {\r\n    return (<View style={style.logo}>\r\n        <LogoTitle />\r\n        <Text theme={theme} style={style.logoSub}>{title}</Text>\r\n    </View>)\r\n}\r\n\r\nfunction Form(props: { onSubmit: (user: string, password: string) => void | Promise<void> }) {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    return (<View style={style.form}>\r\n        <Input name='Username' value={username} setValue={setUsername} />\r\n        <Input name='Password' hidden={true} value={password} setValue={setPassword} />\r\n        <CPMText style={{ ...style.forgot, ...style.text }}>{forgot_passord}</CPMText>\r\n        <Button mode='outlined' style={style.button} onPress={() => props.onSubmit(username, password)}>Login</Button>\r\n    </View>)\r\n}\r\n\r\nfunction Input(props: { name: string, value: string, setValue: ReactDispatch<string>, hidden?: boolean }) {\r\n    const [focus, setFocus] = useState(false);\r\n    return (<TextInput secureTextEntry={props.hidden} style={style.text} placeholder={focus ? '' : props.name} value={props.value} onChangeText={text => props.setValue(text)} underlineColor='white' theme={theme} onFocus={() => setFocus(true)} onBlur={() => setFocus(false)} />)\r\n}\r\n\r\n\r\nconst style = StyleSheet.create({\r\n    container: {\r\n        alignItems: 'center',\r\n        flex: 1\r\n    },\r\n    logo: {\r\n        flex: 2,\r\n        alignItems: 'center',\r\n        justifyContent: 'space-evenly'\r\n    },\r\n    logoSub: {\r\n        fontSize: 20,\r\n        fontWeight: 'bold',\r\n        color: 'white'\r\n    },\r\n    form: {\r\n        width: '80%',\r\n        flex: 2,\r\n        alignItems: 'center'\r\n    },\r\n    forgot: {\r\n        textAlign: 'right',\r\n        marginTop: 6\r\n    },\r\n    text: {\r\n        color: 'white',\r\n        width: '100%',\r\n        backgroundColor: 'transparent'\r\n    },\r\n    button: {\r\n        width: 120,\r\n        marginVertical: 50,\r\n        backgroundColor: 'white'\r\n    }\r\n})"]},"metadata":{},"sourceType":"script"}