{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CPMButton = CPMButton;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNativePaper = require(\"react-native-paper\");\n\nvar _styles = _interopRequireDefault(require(\"../styles\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\venkatesh.devireddy\\\\Projects\\\\IoT_Central_CPM\\\\src\\\\components\\\\buttons.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction CPMButton(props) {\n  var mode = props.mode,\n      children = props.children,\n      style = props.style,\n      onPress = props.onPress;\n  var theme = (0, _reactNativePaper.useTheme)();\n  var textColor = theme.colors.text;\n  return _react.default.createElement(_reactNativePaper.Button, {\n    onPress: onPress,\n    mode: mode,\n    color: \"#75FBFD\",\n    style: [style, {\n      justifyContent: 'center'\n    }, mode === 'outlined' ? _objectSpread({\n      borderColor: '#75FBFD',\n      borderWidth: 2\n    }, _styles.default.elevated) : {}],\n    labelStyle: {\n      color: textColor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, children);\n}","map":{"version":3,"sources":["C:/Users/venkatesh.devireddy/Projects/IoT_Central_CPM/src/components/buttons.tsx"],"names":["CPMButton","props","mode","children","style","onPress","theme","textColor","colors","text","justifyContent","borderColor","borderWidth","DefaultStyles","elevated","color"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA;;;;;;;;AASO,SAASA,SAAT,CAAmBC,KAAnB,EAA0C;AAC7C,MAAQC,IAAR,GAA2CD,KAA3C,CAAQC,IAAR;AAAA,MAAcC,QAAd,GAA2CF,KAA3C,CAAcE,QAAd;AAAA,MAAwBC,KAAxB,GAA2CH,KAA3C,CAAwBG,KAAxB;AAAA,MAA+BC,OAA/B,GAA2CJ,KAA3C,CAA+BI,OAA/B;AACA,MAAMC,KAAK,GAAG,iCAAd;AACA,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAaC,IAA/B;AAEA,SACI,6BAAC,wBAAD;AAAQ,IAAA,OAAO,EAAEJ,OAAjB;AAA0B,IAAA,IAAI,EAAEH,IAAhC;AACI,IAAA,KAAK,EAAC,SADV;AAEI,IAAA,KAAK,EAAE,CAACE,KAAD,EAAQ;AAAEM,MAAAA,cAAc,EAAE;AAAlB,KAAR,EAAuCR,IAAI,KAAK,UAAT;AAAwBS,MAAAA,WAAW,EAAE,SAArC;AAAgDC,MAAAA,WAAW,EAAE;AAA7D,OAAmEC,gBAAcC,QAAjF,IAA8F,EAArI,CAFX;AAGI,IAAA,UAAU,EAAE;AAAEC,MAAAA,KAAK,EAAER;AAAT,KAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKJ,QAJL,CADJ;AAOH","sourcesContent":["import React from 'react';\r\nimport { Button, useTheme } from \"react-native-paper\";\r\nimport { StyleProp, ViewStyle } from \"react-native\";\r\nimport DefaultStyles from '../styles';\r\n\r\nexport type CPMButtonProps = {\r\n    children: React.ReactNode,\r\n    onPress?: () => void,\r\n    mode?: 'text' | 'outlined' | 'contained',\r\n    style?: StyleProp<ViewStyle>\r\n}\r\n\r\nexport function CPMButton(props: CPMButtonProps) {\r\n    const { mode, children, style, onPress } = props;\r\n    const theme = useTheme();\r\n    const textColor = theme.colors.text;\r\n\r\n    return (\r\n        <Button onPress={onPress} mode={mode}\r\n            color='#75FBFD'\r\n            style={[style, { justifyContent: 'center' }, (mode === 'outlined' ? { borderColor: '#75FBFD', borderWidth: 2, ...DefaultStyles.elevated } : {})]}\r\n            labelStyle={{ color: textColor }}>\r\n            {children}\r\n        </Button>)\r\n}"]},"metadata":{},"sourceType":"script"}