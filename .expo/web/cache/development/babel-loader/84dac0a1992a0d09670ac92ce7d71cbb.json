{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar chartDataSetConfig = {\n  common: {\n    color: _propTypes.default.number,\n    colors: _propTypes.default.arrayOf(_propTypes.default.number),\n    highlightEnabled: _propTypes.default.bool,\n    drawValues: _propTypes.default.bool,\n    valueTextSize: _propTypes.default.number,\n    valueTextColor: _propTypes.default.number,\n    visible: _propTypes.default.bool,\n    valueFormatter: _propTypes.default.oneOfType([_propTypes.default.oneOf(['largeValue', 'percent', 'date']), _propTypes.default.string, _propTypes.default.arrayOf(_propTypes.default.string)]),\n    valueFormatterPattern: _propTypes.default.string,\n    axisDependency: _propTypes.default.oneOf(['LEFT', 'RIGHT'])\n  },\n  barLineScatterCandleBubble: {\n    highlightColor: _propTypes.default.number\n  },\n  lineScatterCandleRadar: {\n    drawVerticalHighlightIndicator: _propTypes.default.bool,\n    drawHorizontalHighlightIndicator: _propTypes.default.bool,\n    highlightLineWidth: _propTypes.default.number\n  },\n  lineRadar: {\n    fillGradient: _propTypes.default.shape({\n      colors: _propTypes.default.arrayOf(_propTypes.default.number),\n      positions: _propTypes.default.arrayOf(_propTypes.default.number),\n      angle: _propTypes.default.number,\n      orientation: _propTypes.default.oneOf(['TOP_BOTTOM', 'TR_BL', 'RIGHT_LEFT', 'BR_TL', 'BOTTOM_TOP', 'BL_TR', 'LEFT_RIGHT', 'TL_BR'])\n    }),\n    fillColor: _propTypes.default.number,\n    fillAlpha: _propTypes.default.number,\n    drawFilled: _propTypes.default.bool,\n    lineWidth: function lineWidth(props, propName, componentName) {\n      var lineWidth = props[propName];\n\n      if (lineWidth && (typeof lineWidth !== 'number' || lineWidth < 0.2 || lineWidth > 10)) {\n        return new Error(\"Invalid prop \" + propName + \" supplied to '\" + componentName + \"'. Value must be number and between 0.2f and 10f\");\n      }\n    }\n  }\n};\nvar _default = chartDataSetConfig;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/venkatesh.devireddy/Projects/IoT_Central_CPM/node_modules/react-native-charts-wrapper/lib/ChartDataSetConfig.js"],"names":["chartDataSetConfig","common","color","PropTypes","number","colors","arrayOf","highlightEnabled","bool","drawValues","valueTextSize","valueTextColor","visible","valueFormatter","oneOfType","oneOf","string","valueFormatterPattern","axisDependency","barLineScatterCandleBubble","highlightColor","lineScatterCandleRadar","drawVerticalHighlightIndicator","drawHorizontalHighlightIndicator","highlightLineWidth","lineRadar","fillGradient","shape","positions","angle","orientation","fillColor","fillAlpha","drawFilled","lineWidth","props","propName","componentName","Error"],"mappings":";;;;;;;AAAA;;AACA;;AAMA,IAAMA,kBAAkB,GAAG;AACzBC,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAEC,mBAAUC,MADX;AAENC,IAAAA,MAAM,EAAEF,mBAAUG,OAAV,CAAkBH,mBAAUC,MAA5B,CAFF;AAGNG,IAAAA,gBAAgB,EAACJ,mBAAUK,IAHrB;AAINC,IAAAA,UAAU,EAAEN,mBAAUK,IAJhB;AAKNE,IAAAA,aAAa,EAACP,mBAAUC,MALlB;AAMNO,IAAAA,cAAc,EAACR,mBAAUC,MANnB;AAONQ,IAAAA,OAAO,EAACT,mBAAUK,IAPZ;AAQNK,IAAAA,cAAc,EAAEV,mBAAUW,SAAV,CAAoB,CAClCX,mBAAUY,KAAV,CAAgB,CAAC,YAAD,EAAe,SAAf,EAA0B,MAA1B,CAAhB,CADkC,EAElCZ,mBAAUa,MAFwB,EAGlCb,mBAAUG,OAAV,CAAkBH,mBAAUa,MAA5B,CAHkC,CAApB,CARV;AAaNC,IAAAA,qBAAqB,EAAEd,mBAAUa,MAb3B;AAcNE,IAAAA,cAAc,EAACf,mBAAUY,KAAV,CAAgB,CAAC,MAAD,EAAS,OAAT,CAAhB;AAdT,GADiB;AAkBzBI,EAAAA,0BAA0B,EAAE;AAC1BC,IAAAA,cAAc,EAAEjB,mBAAUC;AADA,GAlBH;AAsBzBiB,EAAAA,sBAAsB,EAAE;AACtBC,IAAAA,8BAA8B,EAAEnB,mBAAUK,IADpB;AAEtBe,IAAAA,gCAAgC,EAAEpB,mBAAUK,IAFtB;AAGtBgB,IAAAA,kBAAkB,EAAErB,mBAAUC;AAHR,GAtBC;AA4BzBqB,EAAAA,SAAS,EAAE;AACTC,IAAAA,YAAY,EAAEvB,mBAAUwB,KAAV,CAAgB;AAC5BtB,MAAAA,MAAM,EAAEF,mBAAUG,OAAV,CAAkBH,mBAAUC,MAA5B,CADoB;AAG5BwB,MAAAA,SAAS,EAAEzB,mBAAUG,OAAV,CAAkBH,mBAAUC,MAA5B,CAHiB;AAI5ByB,MAAAA,KAAK,EAAE1B,mBAAUC,MAJW;AAM5B0B,MAAAA,WAAW,EAAE3B,mBAAUY,KAAV,CAAgB,CAE3B,YAF2B,EAI3B,OAJ2B,EAM3B,YAN2B,EAQ3B,OAR2B,EAU3B,YAV2B,EAY3B,OAZ2B,EAc3B,YAd2B,EAgB3B,OAhB2B,CAAhB;AANe,KAAhB,CADL;AA0BTgB,IAAAA,SAAS,EAAE5B,mBAAUC,MA1BZ;AA2BT4B,IAAAA,SAAS,EAAE7B,mBAAUC,MA3BZ;AA4BT6B,IAAAA,UAAU,EAAE9B,mBAAUK,IA5Bb;AA6BT0B,IAAAA,SAAS,EAAE,mBAACC,KAAD,EAAQC,QAAR,EAAkBC,aAAlB,EAAoC;AAC7C,UAAIH,SAAS,GAAGC,KAAK,CAACC,QAAD,CAArB;;AACA,UAAIF,SAAS,KAAK,OAAOA,SAAP,KAAqB,QAArB,IAAiCA,SAAS,GAAG,GAA7C,IAAoDA,SAAS,GAAG,EAArE,CAAb,EAAuF;AACrF,eAAO,IAAII,KAAJ,mBACWF,QADX,sBACoCC,aADpC,sDAAP;AAGD;AACF;AApCQ;AA5Bc,CAA3B;eAoEerC,kB","sourcesContent":["import PropTypes from 'prop-types';\nimport {\n  requireNativeComponent,\n  View\n} from 'react-native';\n\n\nconst chartDataSetConfig = {\n  common: {\n    color: PropTypes.number,\n    colors: PropTypes.arrayOf(PropTypes.number),\n    highlightEnabled:PropTypes.bool,\n    drawValues: PropTypes.bool,\n    valueTextSize:PropTypes.number,\n    valueTextColor:PropTypes.number,\n    visible:PropTypes.bool,\n    valueFormatter: PropTypes.oneOfType([\n      PropTypes.oneOf(['largeValue', 'percent', 'date']),\n      PropTypes.string,\n      PropTypes.arrayOf(PropTypes.string)\n    ]),\n    valueFormatterPattern: PropTypes.string,\n    axisDependency:PropTypes.oneOf(['LEFT', 'RIGHT'])\n  },\n\n  barLineScatterCandleBubble: {\n    highlightColor: PropTypes.number\n  },\n\n  lineScatterCandleRadar: {\n    drawVerticalHighlightIndicator: PropTypes.bool,\n    drawHorizontalHighlightIndicator: PropTypes.bool,\n    highlightLineWidth: PropTypes.number\n  },\n\n  lineRadar: {\n    fillGradient: PropTypes.shape({\n      colors: PropTypes.arrayOf(PropTypes.number),\n      // iOS\n      positions: PropTypes.arrayOf(PropTypes.number),\n      angle: PropTypes.number,\n      // Android\n      orientation: PropTypes.oneOf([\n        // draw the gradient from the top to the bottom\n        'TOP_BOTTOM',\n        // draw the gradient from the top-right to the bottom-left\n        'TR_BL',\n        // draw the gradient from the right to the left\n        'RIGHT_LEFT',\n        // draw the gradient from the bottom-right to the top-left\n        'BR_TL',\n        // draw the gradient from the bottom to the top\n        'BOTTOM_TOP',\n        // draw the gradient from the bottom-left to the top-right\n        'BL_TR',\n        // draw the gradient from the left to the right\n        'LEFT_RIGHT',\n        // draw the gradient from the top-left to the bottom-right\n        'TL_BR',\n      ]),\n    }),\n    fillColor: PropTypes.number,\n    fillAlpha: PropTypes.number,\n    drawFilled: PropTypes.bool,\n    lineWidth: (props, propName, componentName) => {\n      let lineWidth = props[propName];\n      if (lineWidth && (typeof lineWidth !== 'number' || lineWidth < 0.2 || lineWidth > 10)) {\n        return new Error(\n          `Invalid prop ${propName} supplied to '${componentName}'. Value must be number and between 0.2f and 10f`\n        );\n      }\n    }\n  }\n};\n\nexport default chartDataSetConfig;"]},"metadata":{},"sourceType":"script"}