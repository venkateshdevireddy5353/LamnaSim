{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.promiseTimeout = exports.CryptJsWordArrayToUint8Array = exports.computeKey = exports.generateHubCredentials = exports.parseConnectionString = exports.DecryptCredentials = void 0;\n\nvar aes_1 = __importDefault(require(\"crypto-js/aes\"));\n\nvar enc_utf8_1 = __importDefault(require(\"crypto-js/enc-utf8\"));\n\nvar hmac_sha256_1 = __importDefault(require(\"crypto-js/hmac-sha256\"));\n\nvar enc_base64_1 = require(\"crypto-js/enc-base64\");\n\nfunction DecryptCredentials(value, pass) {\n  try {\n    var decrypted = pass ? aes_1.default.decrypt(value, pass) : value;\n    var words = enc_base64_1.parse(decrypted.toString(enc_utf8_1.default));\n    return JSON.parse(enc_utf8_1.default.stringify(words));\n  } catch (e) {\n    var _words = enc_base64_1.parse(value);\n\n    return JSON.parse(enc_utf8_1.default.stringify(_words));\n  }\n}\n\nexports.DecryptCredentials = DecryptCredentials;\n\nfunction parseConnectionString(connectionString) {\n  var fields = connectionString.split(\";\");\n  var cStringInfo = fields.reduce(function (data, field) {\n    var kv = field.split(\"=\", 2);\n    data[kv[0]] = kv[1];\n    return data;\n  }, {});\n  return _extends(_extends({}, generateHubCredentials(cStringInfo[\"HostName\"], cStringInfo[\"DeviceId\"], cStringInfo[\"SharedAccessKey\"])), {\n    deviceId: cStringInfo[\"DeviceId\"]\n  });\n}\n\nexports.parseConnectionString = parseConnectionString;\n\nfunction generateHubCredentials(assignedHub, registrationId, deviceKey) {\n  var expiry = Math.floor(Date.now() / 1000) + 21600;\n  var uri = encodeURIComponent(assignedHub + \"/devices/\" + registrationId);\n  var sig = encodeURIComponent(computeKey(deviceKey, uri + \"\\n\" + expiry));\n  return {\n    host: assignedHub,\n    password: \"SharedAccessSignature sr=\" + uri + \"&sig=\" + sig + \"&se=\" + expiry\n  };\n}\n\nexports.generateHubCredentials = generateHubCredentials;\n\nfunction computeKey(key, data) {\n  return enc_base64_1.stringify(hmac_sha256_1.default(data, enc_base64_1.parse(key)));\n}\n\nexports.computeKey = computeKey;\n\nfunction CryptJsWordArrayToUint8Array(wordArray) {\n  var l = wordArray.sigBytes;\n  var words = wordArray.words;\n  var result = new Uint8Array(l);\n  var i = 0,\n      j = 0;\n\n  while (true) {\n    if (i == l) break;\n    var w = words[j++];\n    result[i++] = (w & 0xff000000) >>> 24;\n    if (i == l) break;\n    result[i++] = (w & 0x00ff0000) >>> 16;\n    if (i == l) break;\n    result[i++] = (w & 0x0000ff00) >>> 8;\n    if (i == l) break;\n    result[i++] = w & 0x000000ff;\n  }\n\n  return result;\n}\n\nexports.CryptJsWordArrayToUint8Array = CryptJsWordArrayToUint8Array;\n\nfunction promiseTimeout(fn, ms) {\n  var id, timeout;\n  return _regeneratorRuntime.async(function promiseTimeout$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          timeout = new Promise(function (resolve, reject) {\n            id = setTimeout(function () {\n              reject(\"Timed out in \" + ms + \"ms.\");\n            }, ms);\n          });\n          return _context.abrupt(\"return\", Promise.race([fn(), timeout]).then(function (result) {\n            clearTimeout(id);\n            return Promise.resolve(result);\n          }).catch(function (err) {\n            clearTimeout(id);\n            return Promise.reject(err);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexports.promiseTimeout = promiseTimeout;","map":{"version":3,"sources":["../src/utils.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.promiseTimeout = exports.CryptJsWordArrayToUint8Array = exports.computeKey = exports.generateHubCredentials = exports.parseConnectionString = exports.DecryptCredentials = void 0;\nconst aes_1 = __importDefault(require(\"crypto-js/aes\"));\nconst enc_utf8_1 = __importDefault(require(\"crypto-js/enc-utf8\"));\nconst hmac_sha256_1 = __importDefault(require(\"crypto-js/hmac-sha256\"));\nconst enc_base64_1 = require(\"crypto-js/enc-base64\");\nfunction DecryptCredentials(value, pass) {\n    try {\n        // try decrypting with password if encrypted and passed.\n        const decrypted = pass ? aes_1.default.decrypt(value, pass) : value;\n        const words = enc_base64_1.parse(decrypted.toString(enc_utf8_1.default));\n        return JSON.parse(enc_utf8_1.default.stringify(words));\n    }\n    catch (e) {\n        // try plain even if password is provided otherwise throw\n        const words = enc_base64_1.parse(value);\n        return JSON.parse(enc_utf8_1.default.stringify(words));\n    }\n}\nexports.DecryptCredentials = DecryptCredentials;\nfunction parseConnectionString(connectionString) {\n    const fields = connectionString.split(\";\");\n    const cStringInfo = fields.reduce((data, field) => {\n        const kv = field.split(\"=\", 2);\n        data[kv[0]] = kv[1];\n        return data;\n    }, {});\n    return Object.assign(Object.assign({}, generateHubCredentials(cStringInfo[\"HostName\"], cStringInfo[\"DeviceId\"], cStringInfo[\"SharedAccessKey\"])), { deviceId: cStringInfo[\"DeviceId\"] });\n}\nexports.parseConnectionString = parseConnectionString;\nfunction generateHubCredentials(assignedHub, registrationId, deviceKey) {\n    const expiry = Math.floor(Date.now() / 1000) + 21600;\n    const uri = encodeURIComponent(`${assignedHub}/devices/${registrationId}`);\n    const sig = encodeURIComponent(computeKey(deviceKey, `${uri}\\n${expiry}`));\n    return {\n        host: assignedHub,\n        password: `SharedAccessSignature sr=${uri}&sig=${sig}&se=${expiry}`,\n    };\n}\nexports.generateHubCredentials = generateHubCredentials;\nfunction computeKey(key, data) {\n    return enc_base64_1.stringify(hmac_sha256_1.default(data, enc_base64_1.parse(key)));\n}\nexports.computeKey = computeKey;\nfunction CryptJsWordArrayToUint8Array(wordArray) {\n    const l = wordArray.sigBytes;\n    const words = wordArray.words;\n    const result = new Uint8Array(l);\n    var i = 0 /*dst*/, j = 0; /*src*/\n    while (true) {\n        // here i is a multiple of 4\n        if (i == l)\n            break;\n        var w = words[j++];\n        result[i++] = (w & 0xff000000) >>> 24;\n        if (i == l)\n            break;\n        result[i++] = (w & 0x00ff0000) >>> 16;\n        if (i == l)\n            break;\n        result[i++] = (w & 0x0000ff00) >>> 8;\n        if (i == l)\n            break;\n        result[i++] = w & 0x000000ff;\n    }\n    return result;\n}\nexports.CryptJsWordArrayToUint8Array = CryptJsWordArrayToUint8Array;\nasync function promiseTimeout(fn, ms) {\n    let id;\n    let timeout = new Promise((resolve, reject) => {\n        id = setTimeout(() => {\n            reject(\"Timed out in \" + ms + \"ms.\");\n        }, ms);\n    });\n    return Promise.race([fn(), timeout])\n        .then((result) => {\n        clearTimeout(id);\n        /**\n         * ... we also need to pass the result back\n         */\n        return Promise.resolve(result);\n    })\n        .catch((err) => {\n        clearTimeout(id);\n        return Promise.reject(err);\n    });\n}\nexports.promiseTimeout = promiseTimeout;\n//# sourceMappingURL=utils.js.map"]},"metadata":{},"sourceType":"script"}