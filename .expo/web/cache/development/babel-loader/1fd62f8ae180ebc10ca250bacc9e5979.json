{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.usePrevious = usePrevious;\nexports.useEnv = useEnv;\nexports.useTimer = useTimer;\nexports.useHeaderTitle = useHeaderTitle;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = require(\"react\");\n\nvar _native = require(\"@react-navigation/native\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction usePrevious(value) {\n  var ref = (0, _react.useRef)();\n  (0, _react.useEffect)(function () {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\n\nfunction useEnv() {\n  var _useState = (0, _react.useState)({\n    GoogleFit: true,\n    AppleHealth: true\n  }),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      variables = _useState2[0],\n      setVariables = _useState2[1];\n\n  var readEnv = function readEnv() {\n    var envvars;\n    return _regenerator.default.async(function readEnv$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regenerator.default.awrap(import('../../env.json'));\n\n          case 3:\n            envvars = _context.sent.default;\n            console.log(\"Envvars: \" + JSON.stringify(envvars));\n            setVariables(function (vars) {\n              return _objectSpread(_objectSpread({}, vars), envvars);\n            });\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            setVariables(function (vars) {\n              return _objectSpread(_objectSpread({}, vars), {\n                GoogleFit: true,\n                AppleHealth: true\n              });\n            });\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  (0, _react.useEffect)(function () {\n    readEnv();\n  }, []);\n  return variables;\n}\n\nfunction useTimer(seconds) {\n  var _useState3 = (0, _react.useState)(false),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      done = _useState4[0],\n      setDone = _useState4[1];\n\n  (0, _react.useEffect)(function () {\n    setTimeout(function () {\n      setDone(true);\n    }, seconds);\n  }, []);\n  return done;\n}\n\nfunction useHeaderTitle(title) {\n  var isFocused = (0, _native.useIsFocused)();\n  var navigation = (0, _native.useNavigation)();\n  var counter = (0, _react.useRef)(0);\n  (0, _react.useEffect)(function () {\n    if (isFocused) {\n      counter.current++;\n      navigation.setParams({\n        title: title\n      });\n    }\n  }, [isFocused]);\n}","map":{"version":3,"sources":["C:/Users/venkatesh.devireddy/Projects/IoT_Central_CPM/src/hooks/common.ts"],"names":["usePrevious","value","ref","current","useEnv","GoogleFit","AppleHealth","variables","setVariables","readEnv","envvars","default","console","log","JSON","stringify","vars","useTimer","seconds","done","setDone","setTimeout","useHeaderTitle","title","isFocused","navigation","counter","setParams"],"mappings":";;;;;;;;;;;;;;;;AAAA;;AACA;;;;;;AAOO,SAASA,WAAT,CAAwBC,KAAxB,EAAkC;AAGrC,MAAMC,GAAG,GAAG,oBAAZ;AAGA,wBAAU,YAAM;AACZA,IAAAA,GAAG,CAACC,OAAJ,GAAcF,KAAd;AACH,GAFD,EAEG,CAACA,KAAD,CAFH;AAKA,SAAOC,GAAG,CAACC,OAAX;AACH;;AAEM,SAASC,MAAT,GAAkB;AACrB,kBAAkC,qBAA+B;AAC7DC,IAAAA,SAAS,EAAE,IADkD;AAE7DC,IAAAA,WAAW,EAAE;AAFgD,GAA/B,CAAlC;AAAA;AAAA,MAAOC,SAAP;AAAA,MAAkBC,YAAlB;;AAKA,MAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAEe,OAAO,gBAAP,CAFf;;AAAA;AAEFC,YAAAA,OAFE,iBAEyCC,OAFzC;AAGRC,YAAAA,OAAO,CAACC,GAAR,eAAwBC,IAAI,CAACC,SAAL,CAAeL,OAAf,CAAxB;AACAF,YAAAA,YAAY,CAAC,UAAAQ,IAAI;AAAA,qDAAUA,IAAV,GAAmBN,OAAnB;AAAA,aAAL,CAAZ;AAJQ;AAAA;;AAAA;AAAA;AAAA;AAORF,YAAAA,YAAY,CAAC,UAAAQ,IAAI;AAAA,qDACVA,IADU,GACD;AACRX,gBAAAA,SAAS,EAAE,IADH;AAERC,gBAAAA,WAAW,EAAE;AAFL,eADC;AAAA,aAAL,CAAZ;;AAPQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAeA,wBAAU,YAAM;AACZG,IAAAA,OAAO;AACV,GAFD,EAEG,EAFH;AAIA,SAAOF,SAAP;AACH;;AAMM,SAASU,QAAT,CAAkBC,OAAlB,EAAmC;AACtC,mBAAwB,qBAAS,KAAT,CAAxB;AAAA;AAAA,MAAOC,IAAP;AAAA,MAAaC,OAAb;;AACA,wBAAU,YAAM;AACZC,IAAAA,UAAU,CAAC,YAAM;AACbD,MAAAA,OAAO,CAAC,IAAD,CAAP;AACH,KAFS,EAEPF,OAFO,CAAV;AAGH,GAJD,EAIG,EAJH;AAKA,SAAOC,IAAP;AACH;;AAGM,SAASG,cAAT,CAAwBC,KAAxB,EAA6C;AAChD,MAAMC,SAAS,GAAG,2BAAlB;AACA,MAAMC,UAAU,GAAG,4BAAnB;AACA,MAAMC,OAAO,GAAG,mBAAO,CAAP,CAAhB;AAEA,wBAAU,YAAM;AACZ,QAAIF,SAAJ,EAAe;AACXE,MAAAA,OAAO,CAACvB,OAAR;AACAsB,MAAAA,UAAU,CAACE,SAAX,CAAqB;AAAEJ,QAAAA,KAAK,EAALA;AAAF,OAArB;AACH;AACJ,GALD,EAKG,CAACC,SAAD,CALH;AAMH","sourcesContent":["import { useRef, useEffect, useState } from \"react\";\r\nimport { useIsFocused, useNavigation } from \"@react-navigation/native\";\r\n\r\nexport type EnvironmentVariables = {\r\n    GoogleFit?: boolean,\r\n    AppleHealth?: boolean\r\n} & { [x: string]: any }\r\n\r\nexport function usePrevious<T>(value: T) {\r\n    // The ref object is a generic container whose current property is mutable ...\r\n    // ... and can hold any value, similar to an instance property on a class\r\n    const ref = useRef<T>();\r\n\r\n    // Store current value in ref\r\n    useEffect(() => {\r\n        ref.current = value;\r\n    }, [value]); // Only re-run if value changes\r\n\r\n    // Return previous value (happens before update in useEffect above)\r\n    return ref.current;\r\n}\r\n\r\nexport function useEnv() {\r\n    const [variables, setVariables] = useState<EnvironmentVariables>({\r\n        GoogleFit: true,\r\n        AppleHealth: true\r\n    });\r\n\r\n    const readEnv = async function () {\r\n        try {\r\n            const envvars = (await import('../../env.json')).default;\r\n            console.log(`Envvars: ${JSON.stringify(envvars)}`);\r\n            setVariables(vars => ({ ...vars, ...envvars }));\r\n        }\r\n        catch (e) {\r\n            setVariables(vars => ({\r\n                ...vars, ...{\r\n                    GoogleFit: true,\r\n                    AppleHealth: true\r\n                }\r\n            }));\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        readEnv();\r\n    }, []);\r\n\r\n    return variables;\r\n}\r\n\r\n/**\r\n * Get a timer returning 'true' when triggers.\r\n * @param seconds Number of seconds before timer triggers.\r\n */\r\nexport function useTimer(seconds: number) {\r\n    const [done, setDone] = useState(false);\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setDone(true);\r\n        }, seconds);\r\n    }, []);\r\n    return done;\r\n}\r\n\r\n\r\nexport function useHeaderTitle(title: string): void {\r\n    const isFocused = useIsFocused();\r\n    const navigation = useNavigation();\r\n    const counter = useRef(0);\r\n\r\n    useEffect(() => {\r\n        if (isFocused) {\r\n            counter.current++;\r\n            navigation.setParams({ title })\r\n        }\r\n    }, [isFocused]);\r\n}"]},"metadata":{},"sourceType":"script"}