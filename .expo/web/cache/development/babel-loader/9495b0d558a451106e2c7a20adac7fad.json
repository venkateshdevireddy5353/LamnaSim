{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MqttProtoIdentifierv4 = exports.MqttProtoIdentifierv3 = exports.CONNACK_RC = exports.MESSAGE_TYPE = exports.ERROR = exports.DEFAULT_KEEPALIVE_SECONDS = void 0;\nvar DEFAULT_KEEPALIVE_SECONDS = 60;\nexports.DEFAULT_KEEPALIVE_SECONDS = DEFAULT_KEEPALIVE_SECONDS;\nvar ERROR = {\n  OK: {\n    code: 0,\n    text: 'AMQJSC0000I OK.'\n  },\n  CONNECT_TIMEOUT: {\n    code: 1,\n    text: 'AMQJSC0001E Connect timed out.'\n  },\n  SUBSCRIBE_TIMEOUT: {\n    code: 2,\n    text: 'AMQJS0002E Subscribe timed out.'\n  },\n  UNSUBSCRIBE_TIMEOUT: {\n    code: 3,\n    text: 'AMQJS0003E Unsubscribe timed out.'\n  },\n  PING_TIMEOUT: {\n    code: 4,\n    text: 'AMQJS0004E Ping timed out.'\n  },\n  INTERNAL_ERROR: {\n    code: 5,\n    text: 'AMQJS0005E Internal error. Error Message: {0}, Stack trace: {1}'\n  },\n  CONNACK_RETURNCODE: {\n    code: 6,\n    text: 'AMQJS0006E Bad Connack return code:{0} {1}.'\n  },\n  SOCKET_ERROR: {\n    code: 7,\n    text: 'AMQJS0007E Socket error:{0}.'\n  },\n  SOCKET_CLOSE: {\n    code: 8,\n    text: 'AMQJS0008I Socket closed.'\n  },\n  MALFORMED_UTF: {\n    code: 9,\n    text: 'AMQJS0009E Malformed UTF data:{0} {1} {2}.'\n  },\n  UNSUPPORTED: {\n    code: 10,\n    text: 'AMQJS0010E {0} is not supported by this browser.'\n  },\n  INVALID_STATE: {\n    code: 11,\n    text: 'AMQJS0011E Invalid state {0}.'\n  },\n  INVALID_TYPE: {\n    code: 12,\n    text: 'AMQJS0012E Invalid type {0} for {1}.'\n  },\n  INVALID_ARGUMENT: {\n    code: 13,\n    text: 'AMQJS0013E Invalid argument {0} for {1}.'\n  },\n  UNSUPPORTED_OPERATION: {\n    code: 14,\n    text: 'AMQJS0014E Unsupported operation.'\n  },\n  INVALID_STORED_DATA: {\n    code: 15,\n    text: 'AMQJS0015E Invalid data in local storage key={0} value={1}.'\n  },\n  INVALID_MQTT_MESSAGE_TYPE: {\n    code: 16,\n    text: 'AMQJS0016E Invalid MQTT message type {0}.'\n  },\n  MALFORMED_UNICODE: {\n    code: 17,\n    text: 'AMQJS0017E Malformed Unicode string:{0} {1}.'\n  }\n};\nexports.ERROR = ERROR;\nvar MESSAGE_TYPE = {\n  CONNECT: 1,\n  CONNACK: 2,\n  PUBLISH: 3,\n  PUBACK: 4,\n  PUBREC: 5,\n  PUBREL: 6,\n  PUBCOMP: 7,\n  SUBSCRIBE: 8,\n  SUBACK: 9,\n  UNSUBSCRIBE: 10,\n  UNSUBACK: 11,\n  PINGREQ: 12,\n  PINGRESP: 13,\n  DISCONNECT: 14\n};\nexports.MESSAGE_TYPE = MESSAGE_TYPE;\nvar CONNACK_RC = {\n  0: 'Connection Accepted',\n  1: 'Connection Refused: unacceptable protocol version',\n  2: 'Connection Refused: identifier rejected',\n  3: 'Connection Refused: server unavailable',\n  4: 'Connection Refused: bad user name or password',\n  5: 'Connection Refused: not authorized'\n};\nexports.CONNACK_RC = CONNACK_RC;\nvar MqttProtoIdentifierv3 = [0x00, 0x06, 0x4d, 0x51, 0x49, 0x73, 0x64, 0x70, 0x03];\nexports.MqttProtoIdentifierv3 = MqttProtoIdentifierv3;\nvar MqttProtoIdentifierv4 = [0x00, 0x04, 0x4d, 0x51, 0x54, 0x54, 0x04];\nexports.MqttProtoIdentifierv4 = MqttProtoIdentifierv4;","map":{"version":3,"sources":["C:/Users/venkatesh.devireddy/Projects/IoT_Central_CPM/node_modules/react-native-azure-iotcentral-client/node_modules/react-native-paho-mqtt/src/constants.js"],"names":["DEFAULT_KEEPALIVE_SECONDS","ERROR","OK","code","text","CONNECT_TIMEOUT","SUBSCRIBE_TIMEOUT","UNSUBSCRIBE_TIMEOUT","PING_TIMEOUT","INTERNAL_ERROR","CONNACK_RETURNCODE","SOCKET_ERROR","SOCKET_CLOSE","MALFORMED_UTF","UNSUPPORTED","INVALID_STATE","INVALID_TYPE","INVALID_ARGUMENT","UNSUPPORTED_OPERATION","INVALID_STORED_DATA","INVALID_MQTT_MESSAGE_TYPE","MALFORMED_UNICODE","MESSAGE_TYPE","CONNECT","CONNACK","PUBLISH","PUBACK","PUBREC","PUBREL","PUBCOMP","SUBSCRIBE","SUBACK","UNSUBSCRIBE","UNSUBACK","PINGREQ","PINGRESP","DISCONNECT","CONNACK_RC","MqttProtoIdentifierv3","MqttProtoIdentifierv4"],"mappings":"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","sourcesContent":["export const DEFAULT_KEEPALIVE_SECONDS = 60;\n\n/**\n * Unique message type identifiers, with associated\n * associated integer values.\n * @private\n */\nexport const ERROR = {\n  OK: { code: 0, text: 'AMQJSC0000I OK.' },\n  CONNECT_TIMEOUT: { code: 1, text: 'AMQJSC0001E Connect timed out.' },\n  SUBSCRIBE_TIMEOUT: { code: 2, text: 'AMQJS0002E Subscribe timed out.' },\n  UNSUBSCRIBE_TIMEOUT: { code: 3, text: 'AMQJS0003E Unsubscribe timed out.' },\n  PING_TIMEOUT: { code: 4, text: 'AMQJS0004E Ping timed out.' },\n  INTERNAL_ERROR: { code: 5, text: 'AMQJS0005E Internal error. Error Message: {0}, Stack trace: {1}' },\n  CONNACK_RETURNCODE: { code: 6, text: 'AMQJS0006E Bad Connack return code:{0} {1}.' },\n  SOCKET_ERROR: { code: 7, text: 'AMQJS0007E Socket error:{0}.' },\n  SOCKET_CLOSE: { code: 8, text: 'AMQJS0008I Socket closed.' },\n  MALFORMED_UTF: { code: 9, text: 'AMQJS0009E Malformed UTF data:{0} {1} {2}.' },\n  UNSUPPORTED: { code: 10, text: 'AMQJS0010E {0} is not supported by this browser.' },\n  INVALID_STATE: { code: 11, text: 'AMQJS0011E Invalid state {0}.' },\n  INVALID_TYPE: { code: 12, text: 'AMQJS0012E Invalid type {0} for {1}.' },\n  INVALID_ARGUMENT: { code: 13, text: 'AMQJS0013E Invalid argument {0} for {1}.' },\n  UNSUPPORTED_OPERATION: { code: 14, text: 'AMQJS0014E Unsupported operation.' },\n  INVALID_STORED_DATA: { code: 15, text: 'AMQJS0015E Invalid data in local storage key={0} value={1}.' },\n  INVALID_MQTT_MESSAGE_TYPE: { code: 16, text: 'AMQJS0016E Invalid MQTT message type {0}.' },\n  MALFORMED_UNICODE: { code: 17, text: 'AMQJS0017E Malformed Unicode string:{0} {1}.' }\n};\n\n/**\n * Unique message type identifiers, with associated\n * associated integer values.\n * @private\n */\nexport const MESSAGE_TYPE = {\n  CONNECT: 1,\n  CONNACK: 2,\n  PUBLISH: 3,\n  PUBACK: 4,\n  PUBREC: 5,\n  PUBREL: 6,\n  PUBCOMP: 7,\n  SUBSCRIBE: 8,\n  SUBACK: 9,\n  UNSUBSCRIBE: 10,\n  UNSUBACK: 11,\n  PINGREQ: 12,\n  PINGRESP: 13,\n  DISCONNECT: 14\n};\n\n/** CONNACK RC Meaning. */\nexport const CONNACK_RC = {\n  0: 'Connection Accepted',\n  1: 'Connection Refused: unacceptable protocol version',\n  2: 'Connection Refused: identifier rejected',\n  3: 'Connection Refused: server unavailable',\n  4: 'Connection Refused: bad user name or password',\n  5: 'Connection Refused: not authorized'\n};\n\n//MQTTv3.1 protocol and version                6     M     Q     I     s     d     p     3\nexport const MqttProtoIdentifierv3 = [0x00, 0x06, 0x4d, 0x51, 0x49, 0x73, 0x64, 0x70, 0x03];\n//MQTTv4 protocol and version                  4     M     Q     T     T     4\nexport const MqttProtoIdentifierv4 = [0x00, 0x04, 0x4d, 0x51, 0x54, 0x54, 0x04];\n"]},"metadata":{},"sourceType":"script"}