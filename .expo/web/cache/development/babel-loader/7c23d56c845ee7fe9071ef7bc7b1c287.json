{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _WireMessage = _interopRequireDefault(require(\"./WireMessage\"));\n\nvar _constants = require(\"./constants\");\n\nvar _ClientImplementation = _interopRequireDefault(require(\"./ClientImplementation\"));\n\nvar _default = function () {\n  function _default(client, keepAliveIntervalSeconds) {\n    (0, _classCallCheck2.default)(this, _default);\n    this.pingReq = new _WireMessage.default(_constants.MESSAGE_TYPE.PINGREQ).encode();\n    this._client = client;\n    this._keepAliveIntervalMs = keepAliveIntervalSeconds * 1000;\n    this.reset();\n  }\n\n  (0, _createClass2.default)(_default, [{\n    key: \"_doPing\",\n    value: function _doPing() {\n      var _this = this;\n\n      this._client._trace('Pinger.doPing', 'send PINGREQ');\n\n      this._client.socket && this._client.socket.send(this.pingReq);\n      this.timeout = setTimeout(function () {\n        return _this._doPing();\n      }, this._keepAliveIntervalMs);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      var _this2 = this;\n\n      if (this.timeout) {\n        clearTimeout(this.timeout);\n        this.timeout = null;\n      }\n\n      if (this._keepAliveIntervalMs > 0) {\n        this.timeout = setTimeout(function () {\n          return _this2._doPing();\n        }, this._keepAliveIntervalMs);\n      }\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      clearTimeout(this.timeout);\n      this.timeout = null;\n    }\n  }]);\n  return _default;\n}();\n\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/venkatesh.devireddy/Projects/IoT_Central_CPM/node_modules/react-native-azure-iotcentral-client/node_modules/react-native-paho-mqtt/src/Pinger.js"],"names":["client","keepAliveIntervalSeconds","pingReq","WireMessage","MESSAGE_TYPE","PINGREQ","encode","_client","_keepAliveIntervalMs","reset","_trace","socket","send","timeout","setTimeout","_doPing","clearTimeout"],"mappings":";;;;;;;;;;;AAEA;;AACA;;AACA;;;AAYE,oBAAYA,MAAZ,EAA0CC,wBAA1C,EAA4E;AAAA;AAAA,SAH5EC,OAG4E,GAHrD,IAAIC,oBAAJ,CAAgBC,wBAAaC,OAA7B,EAAsCC,MAAtC,EAGqD;AAC1E,SAAKC,OAAL,GAAeP,MAAf;AACA,SAAKQ,oBAAL,GAA4BP,wBAAwB,GAAG,IAAvD;AACA,SAAKQ,KAAL;AACD;;;;WAED,mBAAU;AAAA;;AACR,WAAKF,OAAL,CAAaG,MAAb,CAAoB,eAApB,EAAqC,cAArC;;AACA,WAAKH,OAAL,CAAaI,MAAb,IAAuB,KAAKJ,OAAL,CAAaI,MAAb,CAAoBC,IAApB,CAAyB,KAAKV,OAA9B,CAAvB;AACA,WAAKW,OAAL,GAAeC,UAAU,CAAC;AAAA,eAAM,KAAI,CAACC,OAAL,EAAN;AAAA,OAAD,EAAuB,KAAKP,oBAA5B,CAAzB;AACD;;;WAED,iBAAQ;AAAA;;AACN,UAAI,KAAKK,OAAT,EAAkB;AAChBG,QAAAA,YAAY,CAAC,KAAKH,OAAN,CAAZ;AACA,aAAKA,OAAL,GAAe,IAAf;AACD;;AACD,UAAI,KAAKL,oBAAL,GAA4B,CAAhC,EAAmC;AACjC,aAAKK,OAAL,GAAeC,UAAU,CAAC;AAAA,iBAAM,MAAI,CAACC,OAAL,EAAN;AAAA,SAAD,EAAuB,KAAKP,oBAA5B,CAAzB;AACD;AACF;;;WAED,kBAAS;AACPQ,MAAAA,YAAY,CAAC,KAAKH,OAAN,CAAZ;AACA,WAAKA,OAAL,GAAe,IAAf;AACD","sourcesContent":["/** @flow */\n\nimport WireMessage from './WireMessage';\nimport { MESSAGE_TYPE } from './constants';\nimport ClientImplementation from './ClientImplementation';\n\n/**\n * Repeat keepalive requests, monitor responses.\n * @ignore\n */\nexport default class {\n  _client: ClientImplementation;\n  _keepAliveIntervalMs: number;\n  pingReq: ArrayBuffer = new WireMessage(MESSAGE_TYPE.PINGREQ).encode();\n  timeout: ?number;\n\n  constructor(client: ClientImplementation, keepAliveIntervalSeconds: number) {\n    this._client = client;\n    this._keepAliveIntervalMs = keepAliveIntervalSeconds * 1000;\n    this.reset();\n  }\n\n  _doPing() {\n    this._client._trace('Pinger.doPing', 'send PINGREQ');\n    this._client.socket && this._client.socket.send(this.pingReq);\n    this.timeout = setTimeout(() => this._doPing(), this._keepAliveIntervalMs);\n  }\n\n  reset() {\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n      this.timeout = null;\n    }\n    if (this._keepAliveIntervalMs > 0) {\n      this.timeout = setTimeout(() => this._doPing(), this._keepAliveIntervalMs);\n    }\n  }\n\n  cancel() {\n    clearTimeout(this.timeout);\n    this.timeout = null;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}