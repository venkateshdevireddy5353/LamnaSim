{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useBluetoothData = useBluetoothData;\nexports.isSimulated = isSimulated;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = require(\"react\");\n\nvar _config = require(\"../contexts/config\");\n\nvar _simulated = require(\"../health/simulated\");\n\nfunction useBluetoothData(deviceId) {\n  var _useState = (0, _react.useState)([]),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  (0, _react.useEffect)(function () {\n    var onDataAvailable = function onDataAvailable() {\n      setData(function (currentData) {\n        return [].concat((0, _toConsumableArray2.default)(currentData), []);\n      });\n    };\n  }, []);\n  return data;\n}\n\nfunction isSimulated() {\n  var _useContext = (0, _react.useContext)(_config.ConfigContext),\n      state = _useContext.state;\n\n  var _useState3 = (0, _react.useState)(state.healthManager instanceof _simulated.SimulatedHealthManager),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      simulated = _useState4[0],\n      setSimulated = _useState4[1];\n\n  (0, _react.useEffect)(function () {\n    setSimulated(state.healthManager instanceof _simulated.SimulatedHealthManager);\n  }, [state.healthManager]);\n  return simulated;\n}","map":{"version":3,"sources":["C:/Users/venkatesh.devireddy/Projects/IoT_Central_CPM/src/hooks/bluetoothHooks.tsx"],"names":["useBluetoothData","deviceId","data","setData","onDataAvailable","currentData","isSimulated","ConfigContext","state","healthManager","SimulatedHealthManager","simulated","setSimulated"],"mappings":";;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEO,SAASA,gBAAT,CAA0BC,QAA1B,EAA4C;AAC/C,kBAAwB,qBAAS,EAAT,CAAxB;AAAA;AAAA,MAAOC,IAAP;AAAA,MAAaC,OAAb;;AAEA,wBAAU,YAAM;AACZ,QAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC1BD,MAAAA,OAAO,CAAC,UAAAE,WAAW;AAAA,0DAAQA,WAAR,GAAwB,EAAxB;AAAA,OAAZ,CAAP;AACH,KAFD;AAIH,GALD,EAKG,EALH;AAMA,SAAOH,IAAP;AACH;;AAGM,SAASI,WAAT,GAAgC;AACnC,oBAAkB,uBAAWC,qBAAX,CAAlB;AAAA,MAAQC,KAAR,eAAQA,KAAR;;AACA,mBAAkC,qBAASA,KAAK,CAACC,aAAN,YAA+BC,iCAAxC,CAAlC;AAAA;AAAA,MAAOC,SAAP;AAAA,MAAkBC,YAAlB;;AAEA,wBAAU,YAAM;AACZA,IAAAA,YAAY,CAACJ,KAAK,CAACC,aAAN,YAA+BC,iCAAhC,CAAZ;AACH,GAFD,EAEG,CAACF,KAAK,CAACC,aAAP,CAFH;AAIA,SAAOE,SAAP;AACH","sourcesContent":["import { useEffect, useState, useContext } from \"react\";\r\nimport { ConfigContext } from \"../contexts/config\";\r\nimport { SimulatedHealthManager } from \"../health/simulated\";\r\n\r\nexport function useBluetoothData(deviceId: string) {\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const onDataAvailable = () => {\r\n            setData(currentData => [...currentData, ...[]]);\r\n        }\r\n\r\n    }, []);\r\n    return data;\r\n}\r\n\r\n\r\nexport function isSimulated(): boolean {\r\n    const { state } = useContext(ConfigContext);\r\n    const [simulated, setSimulated] = useState(state.healthManager instanceof SimulatedHealthManager);\r\n    \r\n    useEffect(() => {\r\n        setSimulated(state.healthManager instanceof SimulatedHealthManager);\r\n    }, [state.healthManager]);\r\n\r\n    return simulated;\r\n}"]},"metadata":{},"sourceType":"script"}