{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _hammerjs = _interopRequireDefault(require(\"@egjs/hammerjs\"));\n\nvar _constants = require(\"./constants\");\n\nvar _DraggingGestureHandler = _interopRequireDefault(require(\"./DraggingGestureHandler\"));\n\nvar _utils = require(\"./utils\");\n\nvar _State = require(\"../State\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar PanGestureHandler = function (_DraggingGestureHandl) {\n  (0, _inherits2.default)(PanGestureHandler, _DraggingGestureHandl);\n\n  var _super = _createSuper(PanGestureHandler);\n\n  function PanGestureHandler() {\n    (0, _classCallCheck2.default)(this, PanGestureHandler);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(PanGestureHandler, [{\n    key: \"name\",\n    get: function get() {\n      return 'pan';\n    }\n  }, {\n    key: \"NativeGestureClass\",\n    get: function get() {\n      return _hammerjs.default.Pan;\n    }\n  }, {\n    key: \"getHammerConfig\",\n    value: function getHammerConfig() {\n      return _objectSpread(_objectSpread({}, (0, _get2.default)((0, _getPrototypeOf2.default)(PanGestureHandler.prototype), \"getHammerConfig\", this).call(this)), {}, {\n        direction: this.getDirection()\n      });\n    }\n  }, {\n    key: \"getState\",\n    value: function getState(type) {\n      var nextState = (0, _get2.default)((0, _getPrototypeOf2.default)(PanGestureHandler.prototype), \"getState\", this).call(this, type);\n\n      if (this.previousState === _State.State.UNDETERMINED && nextState === _State.State.ACTIVE) {\n        return _State.State.BEGAN;\n      }\n\n      return nextState;\n    }\n  }, {\n    key: \"getDirection\",\n    value: function getDirection() {\n      var config = this.getConfig();\n      var activeOffsetXStart = config.activeOffsetXStart,\n          activeOffsetXEnd = config.activeOffsetXEnd,\n          activeOffsetYStart = config.activeOffsetYStart,\n          activeOffsetYEnd = config.activeOffsetYEnd,\n          minDist = config.minDist;\n      var directions = [];\n      var horizontalDirections = [];\n\n      if (!(0, _utils.isnan)(minDist)) {\n        return _hammerjs.default.DIRECTION_ALL;\n      }\n\n      if (!(0, _utils.isnan)(activeOffsetXStart)) horizontalDirections.push(_hammerjs.default.DIRECTION_LEFT);\n      if (!(0, _utils.isnan)(activeOffsetXEnd)) horizontalDirections.push(_hammerjs.default.DIRECTION_RIGHT);\n      if (horizontalDirections.length === 2) horizontalDirections = [_hammerjs.default.DIRECTION_HORIZONTAL];\n      directions = directions.concat(horizontalDirections);\n      var verticalDirections = [];\n      if (!(0, _utils.isnan)(activeOffsetYStart)) verticalDirections.push(_hammerjs.default.DIRECTION_UP);\n      if (!(0, _utils.isnan)(activeOffsetYEnd)) verticalDirections.push(_hammerjs.default.DIRECTION_DOWN);\n      if (verticalDirections.length === 2) verticalDirections = [_hammerjs.default.DIRECTION_VERTICAL];\n      directions = directions.concat(verticalDirections);\n\n      if (!directions.length) {\n        return _hammerjs.default.DIRECTION_NONE;\n      }\n\n      if (directions[0] === _hammerjs.default.DIRECTION_HORIZONTAL && directions[1] === _hammerjs.default.DIRECTION_VERTICAL) {\n        return _hammerjs.default.DIRECTION_ALL;\n      }\n\n      if (horizontalDirections.length && verticalDirections.length) {\n        return _hammerjs.default.DIRECTION_ALL;\n      }\n\n      return directions[0];\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      if (!this.hasCustomActivationCriteria) {\n        return {\n          minDistSq: 10\n        };\n      }\n\n      return this.config;\n    }\n  }, {\n    key: \"shouldFailUnderCustomCriteria\",\n    value: function shouldFailUnderCustomCriteria(_ref, criteria) {\n      var deltaX = _ref.deltaX,\n          deltaY = _ref.deltaY;\n      return !(0, _utils.isnan)(criteria.failOffsetXStart) && deltaX < criteria.failOffsetXStart || !(0, _utils.isnan)(criteria.failOffsetXEnd) && deltaX > criteria.failOffsetXEnd || !(0, _utils.isnan)(criteria.failOffsetYStart) && deltaY < criteria.failOffsetYStart || !(0, _utils.isnan)(criteria.failOffsetYEnd) && deltaY > criteria.failOffsetYEnd;\n    }\n  }, {\n    key: \"shouldActivateUnderCustomCriteria\",\n    value: function shouldActivateUnderCustomCriteria(_ref2, criteria) {\n      var deltaX = _ref2.deltaX,\n          deltaY = _ref2.deltaY,\n          velocity = _ref2.velocity;\n      return !(0, _utils.isnan)(criteria.activeOffsetXStart) && deltaX < criteria.activeOffsetXStart || !(0, _utils.isnan)(criteria.activeOffsetXEnd) && deltaX > criteria.activeOffsetXEnd || !(0, _utils.isnan)(criteria.activeOffsetYStart) && deltaY < criteria.activeOffsetYStart || !(0, _utils.isnan)(criteria.activeOffsetYEnd) && deltaY > criteria.activeOffsetYEnd || (0, _utils.TEST_MIN_IF_NOT_NAN)((0, _utils.VEC_LEN_SQ)({\n        x: deltaX,\n        y: deltaY\n      }), criteria.minDistSq) || (0, _utils.TEST_MIN_IF_NOT_NAN)(velocity.x, criteria.minVelocityX) || (0, _utils.TEST_MIN_IF_NOT_NAN)(velocity.y, criteria.minVelocityY) || (0, _utils.TEST_MIN_IF_NOT_NAN)((0, _utils.VEC_LEN_SQ)(velocity), criteria.minVelocitySq);\n    }\n  }, {\n    key: \"shouldMultiFingerPanFail\",\n    value: function shouldMultiFingerPanFail(_ref3) {\n      var pointerLength = _ref3.pointerLength,\n          scale = _ref3.scale,\n          deltaRotation = _ref3.deltaRotation;\n\n      if (pointerLength <= 1) {\n        return false;\n      }\n\n      var deltaScale = Math.abs(scale - 1);\n      var absDeltaRotation = Math.abs(deltaRotation);\n\n      if (deltaScale > _constants.MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD) {\n        return true;\n      }\n\n      if (absDeltaRotation > _constants.MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"updateHasCustomActivationCriteria\",\n    value: function updateHasCustomActivationCriteria(criteria) {\n      return (0, _utils.isValidNumber)(criteria.minDistSq) || (0, _utils.isValidNumber)(criteria.minVelocityX) || (0, _utils.isValidNumber)(criteria.minVelocityY) || (0, _utils.isValidNumber)(criteria.minVelocitySq) || (0, _utils.isValidNumber)(criteria.activeOffsetXStart) || (0, _utils.isValidNumber)(criteria.activeOffsetXEnd) || (0, _utils.isValidNumber)(criteria.activeOffsetYStart) || (0, _utils.isValidNumber)(criteria.activeOffsetYEnd);\n    }\n  }, {\n    key: \"isGestureEnabledForEvent\",\n    value: function isGestureEnabledForEvent(props, _recognizer, inputData) {\n      if (this.shouldFailUnderCustomCriteria(inputData, props)) {\n        return {\n          failed: true\n        };\n      }\n\n      var velocity = {\n        x: inputData.velocityX,\n        y: inputData.velocityY\n      };\n\n      if (this.hasCustomActivationCriteria && this.shouldActivateUnderCustomCriteria({\n        deltaX: inputData.deltaX,\n        deltaY: inputData.deltaY,\n        velocity: velocity\n      }, props)) {\n        if (this.shouldMultiFingerPanFail({\n          pointerLength: inputData.maxPointers,\n          scale: inputData.scale,\n          deltaRotation: inputData.deltaRotation\n        })) {\n          return {\n            failed: true\n          };\n        }\n\n        return {\n          success: true\n        };\n      }\n\n      return {\n        success: false\n      };\n    }\n  }]);\n  return PanGestureHandler;\n}(_DraggingGestureHandler.default);\n\nvar _default = PanGestureHandler;\nexports.default = _default;","map":{"version":3,"sources":["PanGestureHandler.ts"],"names":["name","NativeGestureClass","Hammer","getHammerConfig","direction","getState","nextState","State","getDirection","config","minDist","directions","horizontalDirections","isnan","verticalDirections","getConfig","minDistSq","shouldFailUnderCustomCriteria","deltaY","criteria","deltaX","shouldActivateUnderCustomCriteria","velocity","TEST_MIN_IF_NOT_NAN","VEC_LEN_SQ","x","y","shouldMultiFingerPanFail","deltaRotation","pointerLength","deltaScale","Math","scale","absDeltaRotation","updateHasCustomActivationCriteria","isValidNumber","isGestureEnabledForEvent","failed","inputData","velocityY","success"],"mappings":"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","sourcesContent":["import Hammer from '@egjs/hammerjs';\n\nimport {\n  EventMap,\n  MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD,\n  MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD,\n} from './constants';\nimport DraggingGestureHandler from './DraggingGestureHandler';\nimport { isValidNumber, isnan, TEST_MIN_IF_NOT_NAN, VEC_LEN_SQ } from './utils';\nimport { State } from '../State';\n\nimport { Config, HammerInputExt } from './GestureHandler';\nclass PanGestureHandler extends DraggingGestureHandler {\n  get name() {\n    return 'pan';\n  }\n\n  get NativeGestureClass() {\n    return Hammer.Pan;\n  }\n\n  getHammerConfig() {\n    return {\n      ...super.getHammerConfig(),\n      direction: this.getDirection(),\n    };\n  }\n\n  getState(type: keyof typeof EventMap) {\n    const nextState = super.getState(type);\n    // Ensure that the first state sent is `BEGAN` and not `ACTIVE`\n    if (\n      this.previousState === State.UNDETERMINED &&\n      nextState === State.ACTIVE\n    ) {\n      return State.BEGAN;\n    }\n    return nextState;\n  }\n\n  getDirection() {\n    const config = this.getConfig();\n    const {\n      activeOffsetXStart,\n      activeOffsetXEnd,\n      activeOffsetYStart,\n      activeOffsetYEnd,\n      minDist,\n    } = config;\n    let directions: number[] = [];\n    let horizontalDirections = [];\n\n    if (!isnan(minDist)) {\n      return Hammer.DIRECTION_ALL;\n    }\n\n    if (!isnan(activeOffsetXStart))\n      horizontalDirections.push(Hammer.DIRECTION_LEFT);\n    if (!isnan(activeOffsetXEnd))\n      horizontalDirections.push(Hammer.DIRECTION_RIGHT);\n    if (horizontalDirections.length === 2)\n      horizontalDirections = [Hammer.DIRECTION_HORIZONTAL];\n\n    directions = directions.concat(horizontalDirections);\n    let verticalDirections = [];\n\n    if (!isnan(activeOffsetYStart))\n      verticalDirections.push(Hammer.DIRECTION_UP);\n    if (!isnan(activeOffsetYEnd))\n      verticalDirections.push(Hammer.DIRECTION_DOWN);\n\n    if (verticalDirections.length === 2)\n      verticalDirections = [Hammer.DIRECTION_VERTICAL];\n\n    directions = directions.concat(verticalDirections);\n\n    if (!directions.length) {\n      return Hammer.DIRECTION_NONE;\n    }\n    if (\n      directions[0] === Hammer.DIRECTION_HORIZONTAL &&\n      directions[1] === Hammer.DIRECTION_VERTICAL\n    ) {\n      return Hammer.DIRECTION_ALL;\n    }\n    if (horizontalDirections.length && verticalDirections.length) {\n      return Hammer.DIRECTION_ALL;\n    }\n\n    return directions[0];\n  }\n\n  getConfig() {\n    if (!this.hasCustomActivationCriteria) {\n      // Default config\n      // If no params have been defined then this config should emulate the native gesture as closely as possible.\n      return {\n        minDistSq: 10,\n      };\n    }\n    return this.config;\n  }\n\n  shouldFailUnderCustomCriteria(\n    { deltaX, deltaY }: HammerInputExt,\n    criteria: any\n  ) {\n    return (\n      (!isnan(criteria.failOffsetXStart) &&\n        deltaX < criteria.failOffsetXStart) ||\n      (!isnan(criteria.failOffsetXEnd) && deltaX > criteria.failOffsetXEnd) ||\n      (!isnan(criteria.failOffsetYStart) &&\n        deltaY < criteria.failOffsetYStart) ||\n      (!isnan(criteria.failOffsetYEnd) && deltaY > criteria.failOffsetYEnd)\n    );\n  }\n\n  shouldActivateUnderCustomCriteria(\n    { deltaX, deltaY, velocity }: any,\n    criteria: any\n  ) {\n    return (\n      (!isnan(criteria.activeOffsetXStart) &&\n        deltaX < criteria.activeOffsetXStart) ||\n      (!isnan(criteria.activeOffsetXEnd) &&\n        deltaX > criteria.activeOffsetXEnd) ||\n      (!isnan(criteria.activeOffsetYStart) &&\n        deltaY < criteria.activeOffsetYStart) ||\n      (!isnan(criteria.activeOffsetYEnd) &&\n        deltaY > criteria.activeOffsetYEnd) ||\n      TEST_MIN_IF_NOT_NAN(\n        VEC_LEN_SQ({ x: deltaX, y: deltaY }),\n        criteria.minDistSq\n      ) ||\n      TEST_MIN_IF_NOT_NAN(velocity.x, criteria.minVelocityX) ||\n      TEST_MIN_IF_NOT_NAN(velocity.y, criteria.minVelocityY) ||\n      TEST_MIN_IF_NOT_NAN(VEC_LEN_SQ(velocity), criteria.minVelocitySq)\n    );\n  }\n\n  shouldMultiFingerPanFail({\n    pointerLength,\n    scale,\n    deltaRotation,\n  }: {\n    deltaRotation: number;\n    pointerLength: number;\n    scale: number;\n  }) {\n    if (pointerLength <= 1) {\n      return false;\n    }\n\n    // Test if the pan had too much pinching or rotating.\n    const deltaScale = Math.abs(scale - 1);\n    const absDeltaRotation = Math.abs(deltaRotation);\n    if (deltaScale > MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD) {\n      // > If the threshold doesn't seem right.\n      // You can log the value which it failed at here:\n      return true;\n    }\n    if (absDeltaRotation > MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD) {\n      // > If the threshold doesn't seem right.\n      // You can log the value which it failed at here:\n      return true;\n    }\n\n    return false;\n  }\n\n  updateHasCustomActivationCriteria(\n    criteria: Config & { minVelocityX?: number; minVelocityY?: number }\n  ) {\n    return (\n      isValidNumber(criteria.minDistSq) ||\n      isValidNumber(criteria.minVelocityX) ||\n      isValidNumber(criteria.minVelocityY) ||\n      isValidNumber(criteria.minVelocitySq) ||\n      isValidNumber(criteria.activeOffsetXStart) ||\n      isValidNumber(criteria.activeOffsetXEnd) ||\n      isValidNumber(criteria.activeOffsetYStart) ||\n      isValidNumber(criteria.activeOffsetYEnd)\n    );\n  }\n\n  isGestureEnabledForEvent(\n    props: any,\n    _recognizer: any,\n    inputData: HammerInputExt & { deltaRotation: number }\n  ) {\n    if (this.shouldFailUnderCustomCriteria(inputData, props)) {\n      return { failed: true };\n    }\n\n    const velocity = { x: inputData.velocityX, y: inputData.velocityY };\n    if (\n      this.hasCustomActivationCriteria &&\n      this.shouldActivateUnderCustomCriteria(\n        { deltaX: inputData.deltaX, deltaY: inputData.deltaY, velocity },\n        props\n      )\n    ) {\n      if (\n        this.shouldMultiFingerPanFail({\n          pointerLength: inputData.maxPointers,\n          scale: inputData.scale,\n          deltaRotation: inputData.deltaRotation,\n        })\n      ) {\n        return {\n          failed: true,\n        };\n      }\n      return { success: true };\n    }\n    return { success: false };\n  }\n}\n\nexport default PanGestureHandler;\n"]},"metadata":{},"sourceType":"script"}