{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = MoveEnhancer;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction MoveEnhancer(Chart) {\n  return function (_Chart) {\n    (0, _inherits2.default)(MoveExtended, _Chart);\n\n    var _super = _createSuper(MoveExtended);\n\n    function MoveExtended() {\n      (0, _classCallCheck2.default)(this, MoveExtended);\n      return _super.apply(this, arguments);\n    }\n\n    (0, _createClass2.default)(MoveExtended, [{\n      key: \"moveViewTo\",\n      value: function moveViewTo(x, y, axisDependency) {\n        _reactNative.UIManager.dispatchViewManagerCommand((0, _reactNative.findNodeHandle)(this.getNativeComponentRef()), _reactNative.UIManager.getViewManagerConfig(this.getNativeComponentName()).Commands.moveViewTo, [x, y, axisDependency]);\n      }\n    }, {\n      key: \"moveViewToX\",\n      value: function moveViewToX(x) {\n        _reactNative.UIManager.dispatchViewManagerCommand((0, _reactNative.findNodeHandle)(this.getNativeComponentRef()), _reactNative.UIManager.getViewManagerConfig(this.getNativeComponentName()).Commands.moveViewToX, [x]);\n      }\n    }, {\n      key: \"moveViewToAnimated\",\n      value: function moveViewToAnimated(x, y, axisDependency, duration) {\n        _reactNative.UIManager.dispatchViewManagerCommand((0, _reactNative.findNodeHandle)(this.getNativeComponentRef()), _reactNative.UIManager.getViewManagerConfig(this.getNativeComponentName()).Commands.moveViewToAnimated, [x, y, axisDependency, duration]);\n      }\n    }, {\n      key: \"centerViewTo\",\n      value: function centerViewTo(x, y, axisDependency) {\n        _reactNative.UIManager.dispatchViewManagerCommand((0, _reactNative.findNodeHandle)(this.getNativeComponentRef()), _reactNative.UIManager.getViewManagerConfig(this.getNativeComponentName()).Commands.centerViewTo, [x, y, axisDependency]);\n      }\n    }, {\n      key: \"centerViewToAnimated\",\n      value: function centerViewToAnimated(x, y, axisDependency, duration) {\n        _reactNative.UIManager.dispatchViewManagerCommand((0, _reactNative.findNodeHandle)(this.getNativeComponentRef()), _reactNative.UIManager.getViewManagerConfig(this.getNativeComponentName()).Commands.centerViewToAnimated, [x, y, axisDependency, duration]);\n      }\n    }]);\n    return MoveExtended;\n  }(Chart);\n}","map":{"version":3,"sources":["C:/Users/venkatesh.devireddy/Projects/IoT_Central_CPM/node_modules/react-native-charts-wrapper/lib/MoveEnhancer.js"],"names":["MoveEnhancer","Chart","x","y","axisDependency","UIManager","dispatchViewManagerCommand","getNativeComponentRef","getViewManagerConfig","getNativeComponentName","Commands","moveViewTo","moveViewToX","duration","moveViewToAnimated","centerViewTo","centerViewToAnimated"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;;;;;;;;;AAGe,SAASA,YAAT,CAAsBC,KAAtB,EAA6B;AAC1C;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,aAEE,oBAAWC,CAAX,EAAcC,CAAd,EAAiBC,cAAjB,EAAiC;AAC/BC,+BAAUC,0BAAV,CACE,iCAAe,KAAKC,qBAAL,EAAf,CADF,EAEEF,uBAAUG,oBAAV,CAA+B,KAAKC,sBAAL,EAA/B,EAA8DC,QAA9D,CAAuEC,UAFzE,EAGE,CAACT,CAAD,EAAIC,CAAJ,EAAOC,cAAP,CAHF;AAKD;AARH;AAAA;AAAA,aAWE,qBAAYF,CAAZ,EAAe;AACbG,+BAAUC,0BAAV,CACE,iCAAe,KAAKC,qBAAL,EAAf,CADF,EAEEF,uBAAUG,oBAAV,CAA+B,KAAKC,sBAAL,EAA/B,EAA8DC,QAA9D,CAAuEE,WAFzE,EAGE,CAACV,CAAD,CAHF;AAKD;AAjBH;AAAA;AAAA,aAmBE,4BAAmBA,CAAnB,EAAsBC,CAAtB,EAAyBC,cAAzB,EAAyCS,QAAzC,EAAmD;AACjDR,+BAAUC,0BAAV,CACE,iCAAe,KAAKC,qBAAL,EAAf,CADF,EAEEF,uBAAUG,oBAAV,CAA+B,KAAKC,sBAAL,EAA/B,EAA8DC,QAA9D,CAAuEI,kBAFzE,EAGE,CAACZ,CAAD,EAAIC,CAAJ,EAAOC,cAAP,EAAuBS,QAAvB,CAHF;AAKD;AAzBH;AAAA;AAAA,aA2BE,sBAAaX,CAAb,EAAgBC,CAAhB,EAAmBC,cAAnB,EAAmC;AACjCC,+BAAUC,0BAAV,CACE,iCAAe,KAAKC,qBAAL,EAAf,CADF,EAEEF,uBAAUG,oBAAV,CAA+B,KAAKC,sBAAL,EAA/B,EAA8DC,QAA9D,CAAuEK,YAFzE,EAGE,CAACb,CAAD,EAAIC,CAAJ,EAAOC,cAAP,CAHF;AAKD;AAjCH;AAAA;AAAA,aAmCE,8BAAqBF,CAArB,EAAwBC,CAAxB,EAA2BC,cAA3B,EAA2CS,QAA3C,EAAqD;AACnDR,+BAAUC,0BAAV,CACE,iCAAe,KAAKC,qBAAL,EAAf,CADF,EAEEF,uBAAUG,oBAAV,CAA+B,KAAKC,sBAAL,EAA/B,EAA8DC,QAA9D,CAAuEM,oBAFzE,EAGE,CAACd,CAAD,EAAIC,CAAJ,EAAOC,cAAP,EAAuBS,QAAvB,CAHF;AAKD;AAzCH;AAAA;AAAA,IAAkCZ,KAAlC;AA2CD","sourcesContent":["import React, {Component} from 'react';\nimport { UIManager, findNodeHandle} from 'react-native';\n\n\nexport default function MoveEnhancer(Chart) {\n  return class MoveExtended extends Chart {\n    // x, y, left/right\n    moveViewTo(x, y, axisDependency) {\n      UIManager.dispatchViewManagerCommand(\n        findNodeHandle(this.getNativeComponentRef()),\n        UIManager.getViewManagerConfig(this.getNativeComponentName()).Commands.moveViewTo,\n        [x, y, axisDependency]\n      );\n    }\n\n\n    moveViewToX(x) {\n      UIManager.dispatchViewManagerCommand(\n        findNodeHandle(this.getNativeComponentRef()),\n        UIManager.getViewManagerConfig(this.getNativeComponentName()).Commands.moveViewToX,\n        [x]\n      );\n    }\n\n    moveViewToAnimated(x, y, axisDependency, duration) {\n      UIManager.dispatchViewManagerCommand(\n        findNodeHandle(this.getNativeComponentRef()),\n        UIManager.getViewManagerConfig(this.getNativeComponentName()).Commands.moveViewToAnimated,\n        [x, y, axisDependency, duration]\n      );\n    }\n\n    centerViewTo(x, y, axisDependency) {\n      UIManager.dispatchViewManagerCommand(\n        findNodeHandle(this.getNativeComponentRef()),\n        UIManager.getViewManagerConfig(this.getNativeComponentName()).Commands.centerViewTo,\n        [x, y, axisDependency]\n      );\n    }\n\n    centerViewToAnimated(x, y, axisDependency, duration) {\n      UIManager.dispatchViewManagerCommand(\n        findNodeHandle(this.getNativeComponentRef()),\n        UIManager.getViewManagerConfig(this.getNativeComponentName()).Commands.centerViewToAnimated,\n        [x, y, axisDependency, duration]\n      );\n    }\n  }\n}"]},"metadata":{},"sourceType":"script"}