{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Registration = Registration;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativePaper = require(\"react-native-paper\");\n\nvar _footer = require(\"../components/footer\");\n\nvar _reactNativeQrcodeScanner = _interopRequireDefault(require(\"react-native-qrcode-scanner\"));\n\nvar _config = require(\"../contexts/config\");\n\nvar _auth = require(\"../hooks/auth\");\n\nvar _reactNativeAzureIotcentralClient = require(\"react-native-azure-iotcentral-client\");\n\nvar _utils = require(\"../components/utils\");\n\nvar _central = require(\"../api/central\");\n\nvar _qrcodeMask = _interopRequireDefault(require(\"../components/qrcodeMask\"));\n\nvar _typography = require(\"../components/typography\");\n\nvar _layout = require(\"../hooks/layout\");\n\nvar _buttons = require(\"../components/buttons\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\venkatesh.devireddy\\\\Projects\\\\IoT_Central_CPM\\\\src\\\\screens\\\\registration.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar title = 'GETTING STARTED';\nvar instructions = 'How would you like to verify your device?';\nvar numeric = {\n  instructions: 'Please enter your verification code.',\n  placeholder: 'Enter code',\n  button: 'VERIFY'\n};\nvar code = 'ENTER A CODE';\nvar scan = 'SCAN A CODE';\nvar footerText = 'Depending on the preferred user flow, the backend provisioning information can either be mapped to a code or stored in a QR code.';\nvar qrcodeFooterText = 'After scanning the QR code, the IoT Central provisioning credentials along with a set of cloud properties such as hospital name will be stored in the app and the device ID to patient mapping will be sent to the Azure API for FHIR.';\n\nfunction Loading() {\n  return _react.default.createElement(_reactNative.View, {\n    style: style.loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNativePaper.ActivityIndicator, {\n    size: \"large\",\n    style: {\n      marginVertical: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(_typography.Headline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Connecting to Azure IoT Central ...\"));\n}\n\nfunction Registration() {\n  var _useContext = (0, _react.useContext)(_config.ConfigContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var _useUser = (0, _auth.useUser)(),\n      _useUser2 = (0, _slicedToArray2.default)(_useUser, 2),\n      user = _useUser2[0],\n      setUser = _useUser2[1];\n\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      numeric = _useState2[0],\n      setNumeric = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(false),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      qr = _useState4[0],\n      setQR = _useState4[1];\n\n  var onVerify = function onVerify(data) {\n    var creds, iotc;\n    return _regenerator.default.async(function onVerify$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(user == null)) {\n              _context.next = 2;\n              break;\n            }\n\n            throw new Error('User not logged in');\n\n          case 2:\n            creds = (0, _reactNativeAzureIotcentralClient.DecryptCredentials)(data, user.id);\n            iotc = new _reactNativeAzureIotcentralClient.IoTCClient(creds.deviceId, creds.scopeId, _reactNativeAzureIotcentralClient.IOTC_CONNECT.DEVICE_KEY, creds.deviceKey);\n            iotc.setModelId(creds.modelId);\n            iotc.setLogging(_reactNativeAzureIotcentralClient.IOTC_LOGGING.ALL);\n            _context.next = 8;\n            return _regenerator.default.awrap(iotc.connect());\n\n          case 8:\n            dispatch({\n              type: 'CONNECT',\n              payload: iotc\n            });\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onBack = function onBack() {\n    setQR(false);\n    setNumeric(false);\n    return true;\n  };\n\n  (0, _react.useEffect)(function () {\n    _reactNative.BackHandler.addEventListener('hardwareBackPress', onBack);\n\n    return function () {\n      _reactNative.BackHandler.removeEventListener('hardwareBackPress', onBack);\n    };\n  }, []);\n\n  if (!user || state.centralClient !== undefined) {\n    return null;\n  }\n\n  if (numeric) {\n    return _react.default.createElement(NumericCode, {\n      onVerify: onVerify,\n      onClose: onBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    });\n  }\n\n  if (qr) {\n    return _react.default.createElement(QRCode, {\n      onVerify: onVerify,\n      onClose: onBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    });\n  }\n\n  return _react.default.createElement(_reactNative.View, {\n    style: _objectSpread({\n      flex: 4\n    }, style.container),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_typography.Name, {\n    style: style.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, title)), _react.default.createElement(_reactNative.View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_typography.Name, {\n    style: style.instructions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, instructions)), _react.default.createElement(_reactNative.View, {\n    style: {\n      flex: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_buttons.CPMButton, {\n    mode: \"outlined\",\n    style: style.button,\n    onPress: function onPress() {\n      return setNumeric(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, code), _react.default.createElement(_buttons.CPMButton, {\n    mode: \"contained\",\n    style: _objectSpread({\n      marginBottom: 50\n    }, style.button),\n    onPress: function onPress() {\n      return setQR(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, scan, \" \"), _react.default.createElement(SimulatedButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  })), _react.default.createElement(_footer.Footer, {\n    text: footerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }));\n}\n\nfunction NumericCode(props) {\n  var _useState5 = (0, _react.useState)(''),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      data = _useState6[0],\n      setData = _useState6[1];\n\n  var _useState7 = (0, _react.useState)(false),\n      _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  var _useState9 = (0, _react.useState)(false),\n      _useState10 = (0, _slicedToArray2.default)(_useState9, 2),\n      errorVisible = _useState10[0],\n      setErrorVisible = _useState10[1];\n\n  var verify = function verify() {\n    var creds;\n    return _regenerator.default.async(function verify$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            setLoading(true);\n            _context2.next = 4;\n            return _regenerator.default.awrap((0, _central.getCredentialsFromNumericCode)(data));\n\n          case 4:\n            creds = _context2.sent;\n            _context2.next = 7;\n            return _regenerator.default.awrap(props.onVerify(creds));\n\n          case 7:\n            _context2.next = 13;\n            break;\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](0);\n            setLoading(false);\n            setErrorVisible(true);\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n\n  if (loading) {\n    return _react.default.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    });\n  }\n\n  return _react.default.createElement(_reactNative.View, {\n    style: _objectSpread({\n      flex: 1\n    }, style.container),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNativePaper.IconButton, {\n    icon: \"arrow-left\",\n    onPress: props.onClose,\n    size: 30,\n    style: {\n      marginTop: 40,\n      alignSelf: 'flex-start'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(_reactNative.View, {\n    style: {\n      flex: 1,\n      marginTop: '5%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_typography.CPMText, {\n    style: style.instructions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, numeric.instructions)), _react.default.createElement(_reactNative.View, {\n    style: {\n      flex: 2,\n      width: '80%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNativePaper.TextInput, {\n    placeholder: numeric.placeholder,\n    value: data,\n    onChangeText: setData,\n    numberOfLines: 1,\n    onSubmitEditing: verify,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }), _react.default.createElement(_buttons.CPMButton, {\n    mode: \"contained\",\n    style: style.button,\n    onPress: verify,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, numeric.button)), _react.default.createElement(_reactNative.View, {\n    style: {\n      flex: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(SimulatedButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  })), _react.default.createElement(_reactNative.View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_footer.Footer, {\n    text: footerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  })), _react.default.createElement(_utils.ErrorDialog, {\n    title: \"Error\",\n    text: \"Failed to parse inserted code. Try again or use a simulated connection\",\n    visible: errorVisible,\n    setVisible: function setVisible(val) {\n      setErrorVisible(val);\n      setLoading(val);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }));\n}\n\nfunction QRCode(props) {\n  var _useScreenDimensions = (0, _layout.useScreenDimensions)(),\n      screen = _useScreenDimensions.screen,\n      orientation = _useScreenDimensions.orientation;\n\n  var _useState11 = (0, _react.useState)(false),\n      _useState12 = (0, _slicedToArray2.default)(_useState11, 2),\n      loading = _useState12[0],\n      setLoading = _useState12[1];\n\n  var _useState13 = (0, _react.useState)(false),\n      _useState14 = (0, _slicedToArray2.default)(_useState13, 2),\n      errorVisible = _useState14[0],\n      setErrorVisible = _useState14[1];\n\n  if (loading) {\n    return _react.default.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    });\n  }\n\n  return _react.default.createElement(_reactNative.View, {\n    style: _objectSpread(_objectSpread({}, style.container), {}, {\n      flex: 2,\n      position: 'relative'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNativePaper.IconButton, {\n    icon: \"arrow-left\",\n    onPress: props.onClose,\n    size: 30,\n    color: \"white\",\n    style: {\n      position: 'absolute',\n      alignSelf: 'flex-start',\n      top: 40,\n      zIndex: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }), _react.default.createElement(_reactNativeQrcodeScanner.default, {\n    onRead: function _callee(e) {\n      return _regenerator.default.async(function _callee$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              setLoading(true);\n              _context3.prev = 1;\n              _context3.next = 4;\n              return _regenerator.default.awrap(props.onVerify(e.data));\n\n            case 4:\n              _context3.next = 10;\n              break;\n\n            case 6:\n              _context3.prev = 6;\n              _context3.t0 = _context3[\"catch\"](1);\n              setLoading(false);\n              setErrorVisible(true);\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[1, 6]], Promise);\n    },\n    customMarker: _react.default.createElement(_reactNative.View, {\n      style: {\n        marginTop: -(screen.width / 2)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }\n    }, _react.default.createElement(_qrcodeMask.default, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 25\n      }\n    }), _react.default.createElement(_typography.CPMText, {\n      style: _objectSpread(_objectSpread({}, style.qrtext), style.center),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 25\n      }\n    }, \"Move closer to scan\")),\n    showMarker: true,\n    topViewStyle: {\n      flex: 0,\n      height: 0\n    },\n    cameraStyle: {\n      height: screen.height + 20,\n      width: screen.width\n    },\n    bottomContent: _react.default.createElement(_reactNative.View, {\n      style: {\n        flex: 2,\n        justifyContent: 'flex-end'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 32\n      }\n    }, _react.default.createElement(SimulatedButton, {\n      textColor: \"white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }\n    }), _react.default.createElement(_footer.Footer, {\n      text: qrcodeFooterText,\n      textColor: \"white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }), _react.default.createElement(_utils.ErrorDialog, {\n    title: \"Error\",\n    text: \"Failed to parse inserted code. Try again or use a simulated connection\",\n    visible: errorVisible,\n    setVisible: function setVisible(val) {\n      setErrorVisible(val);\n      setLoading(val);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }));\n}\n\nfunction SimulatedButton(props) {\n  var _useContext2 = (0, _react.useContext)(_config.ConfigContext),\n      dispatch = _useContext2.dispatch;\n\n  var _useScreenDimensions2 = (0, _layout.useScreenDimensions)(),\n      screen = _useScreenDimensions2.screen,\n      orientation = _useScreenDimensions2.orientation;\n\n  var viewStyle = orientation == 'portrait' ? {} : {};\n  return _react.default.createElement(_reactNative.View, {\n    style: _objectSpread({\n      alignItems: 'center'\n    }, viewStyle),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_typography.CPMText, {\n    style: props.textColor ? {\n      color: props.textColor\n    } : {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }, \"Don't have a code?\"), _react.default.createElement(_buttons.CPMButton, {\n    style: style.button,\n    mode: \"contained\",\n    onPress: function onPress() {\n      dispatch({\n        type: 'CONNECT',\n        payload: null\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  }, \"Use simulated code\"));\n}\n\nvar style = _reactNative.StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    marginHorizontal: 30\n  },\n  title: {\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  instructions: {\n    fontSize: 24,\n    textAlign: 'center'\n  },\n  button: {\n    alignSelf: 'center',\n    width: 230,\n    height: 40,\n    marginVertical: 20\n  },\n  center: {\n    position: 'absolute',\n    top: '50%',\n    bottom: 0,\n    left: 0,\n    right: 0\n  },\n  qrtext: {\n    fontSize: 15,\n    color: 'white',\n    marginBottom: 20,\n    textAlign: 'center'\n  },\n  loading: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/venkatesh.devireddy/Projects/IoT_Central_CPM/src/screens/registration.tsx"],"names":["title","instructions","numeric","placeholder","button","code","scan","footerText","qrcodeFooterText","Loading","style","loading","marginVertical","Registration","ConfigContext","state","dispatch","user","setUser","setNumeric","qr","setQR","onVerify","data","Error","creds","id","iotc","IoTCClient","deviceId","scopeId","IOTC_CONNECT","DEVICE_KEY","deviceKey","setModelId","modelId","setLogging","IOTC_LOGGING","ALL","connect","type","payload","onBack","BackHandler","addEventListener","removeEventListener","centralClient","undefined","flex","container","justifyContent","marginBottom","NumericCode","props","setData","setLoading","errorVisible","setErrorVisible","verify","onClose","marginTop","alignSelf","width","val","QRCode","screen","orientation","position","top","zIndex","e","qrtext","center","height","SimulatedButton","viewStyle","alignItems","textColor","color","StyleSheet","create","marginHorizontal","fontWeight","textAlign","fontSize","bottom","left","right"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { View, StyleSheet, BackHandler,  ViewStyle } from \"react-native\";\r\nimport { TextInput, IconButton, ActivityIndicator } from 'react-native-paper';\r\nimport { Footer } from '../components/footer';\r\nimport QRCodeScanner, { Event } from 'react-native-qrcode-scanner'\r\nimport { ConfigContext } from '../contexts/config';\r\nimport { useUser } from '../hooks/auth';\r\nimport { DecryptCredentials, IoTCClient, IOTC_CONNECT, IOTC_LOGGING } from 'react-native-azure-iotcentral-client';\r\nimport { ErrorDialog } from '../components/utils';\r\nimport { getCredentialsFromNumericCode } from '../api/central';\r\nimport QRCodeMask from '../components/qrcodeMask';\r\nimport { Headline, CPMText, Name } from '../components/typography';\r\nimport { useScreenDimensions } from '../hooks/layout';\r\nimport { CPMButton } from '../components/buttons';\r\n\r\n\r\nconst title = 'GETTING STARTED';\r\nconst instructions = 'How would you like to verify your device?'\r\nconst numeric = {\r\n    instructions: 'Please enter your verification code.',\r\n    placeholder: 'Enter code',\r\n    button: 'VERIFY'\r\n}\r\nconst code = 'ENTER A CODE';\r\nconst scan = 'SCAN A CODE';\r\nconst footerText = 'Depending on the preferred user flow, the backend provisioning information can either be mapped to a code or stored in a QR code.';\r\nconst qrcodeFooterText = 'After scanning the QR code, the IoT Central provisioning credentials along with a set of cloud properties such as hospital name will be stored in the app and the device ID to patient mapping will be sent to the Azure API for FHIR.';\r\n\r\ninterface IVerificationProps {\r\n    onVerify(data: any): Promise<void>\r\n}\r\n\r\ninterface IRegistrationProps extends IVerificationProps {\r\n    onClose(): void\r\n}\r\n\r\nfunction Loading() {\r\n    return (<View style={style.loading}>\r\n        <ActivityIndicator size='large' style={{ marginVertical: 30 }} />\r\n        <Headline>Connecting to Azure IoT Central ...</Headline>\r\n    </View>)\r\n}\r\n\r\nexport function Registration() {\r\n    const { state, dispatch } = useContext(ConfigContext);\r\n    const [user, setUser] = useUser();\r\n    const [numeric, setNumeric] = useState(false);\r\n    const [qr, setQR] = useState(false);\r\n\r\n\r\n    const onVerify = async (data: string) => {\r\n        if (user == null) {\r\n            throw new Error('User not logged in');\r\n        }\r\n        const creds = DecryptCredentials(data, user.id);\r\n        // connect to IoTCentral before passing over\r\n        let iotc = new IoTCClient(creds.deviceId, creds.scopeId, IOTC_CONNECT.DEVICE_KEY, creds.deviceKey);\r\n        iotc.setModelId(creds.modelId);\r\n        iotc.setLogging(IOTC_LOGGING.ALL);\r\n        await iotc.connect();\r\n        dispatch({\r\n            type: 'CONNECT',\r\n            payload: iotc\r\n        });\r\n    }\r\n\r\n    const onBack = () => {\r\n        setQR(false);\r\n        setNumeric(false);\r\n        return true;\r\n    }\r\n\r\n    useEffect(() => {\r\n        BackHandler.addEventListener('hardwareBackPress', onBack);\r\n        return () => { BackHandler.removeEventListener('hardwareBackPress', onBack) }\r\n    }, [])\r\n\r\n    if (!user || state.centralClient !== undefined) {\r\n        return (null);\r\n    }\r\n\r\n    if (numeric) {\r\n        return (<NumericCode onVerify={onVerify} onClose={onBack} />)\r\n    }\r\n    if (qr) {\r\n        return (<QRCode onVerify={onVerify} onClose={onBack} />);\r\n    }\r\n    return (<View style={{ flex: 4, ...style.container }}>\r\n        <View style={{ flex: 1, justifyContent: 'center' }}>\r\n            <Name style={style.title}>{title}</Name>\r\n        </View>\r\n        <View style={{ flex: 1, justifyContent: 'center' }}>\r\n            <Name style={style.instructions}>{instructions}</Name>\r\n        </View>\r\n        <View style={{ flex: 2 }}>\r\n            <CPMButton mode='outlined' style={style.button} onPress={() => setNumeric(true)}>{code}</CPMButton>\r\n            <CPMButton mode='contained' style={{ marginBottom: 50, ...style.button }} onPress={() => setQR(true)}>{scan} </CPMButton>\r\n            <SimulatedButton />\r\n        </View>\r\n        <Footer text={footerText} />\r\n    </View>)\r\n}\r\n\r\nfunction NumericCode(props: IRegistrationProps) {\r\n    const [data, setData] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [errorVisible, setErrorVisible] = useState(false);\r\n\r\n    const verify = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const creds = await getCredentialsFromNumericCode(data)\r\n            await props.onVerify(creds);\r\n        }\r\n        catch (e) {\r\n            setLoading(false);\r\n            setErrorVisible(true);\r\n        }\r\n    };\r\n    if (loading) {\r\n        return (<Loading />);\r\n    }\r\n    return (<View style={{ flex: 1, ...style.container }}>\r\n        <IconButton icon='arrow-left' onPress={props.onClose} size={30} style={{ marginTop: 40, alignSelf: 'flex-start' }} />\r\n        <View style={{ flex: 1, marginTop: '5%' }}>\r\n            <CPMText style={style.instructions}>{numeric.instructions}</CPMText>\r\n        </View>\r\n        <View style={{ flex: 2, width: '80%' }}>\r\n            <TextInput placeholder={numeric.placeholder}\r\n                value={data}\r\n                onChangeText={setData}\r\n                numberOfLines={1}\r\n                onSubmitEditing={verify}></TextInput>\r\n            <CPMButton mode='contained' style={style.button} onPress={verify}>{numeric.button}</CPMButton>\r\n        </View>\r\n        <View style={{ flex: 2 }}>\r\n            <SimulatedButton />\r\n        </View>\r\n        <View style={{ flex: 1 }}>\r\n            <Footer text={footerText} />\r\n        </View>\r\n        <ErrorDialog title='Error' text='Failed to parse inserted code. Try again or use a simulated connection' visible={errorVisible} setVisible={(val) => { setErrorVisible(val); setLoading(val); }} />\r\n    </View>)\r\n}\r\n\r\nfunction QRCode(props: IRegistrationProps) {\r\n    const { screen, orientation } = useScreenDimensions();\r\n    const [loading, setLoading] = useState(false);\r\n    const [errorVisible, setErrorVisible] = useState(false);\r\n\r\n    if (loading) {\r\n        return (<Loading />);\r\n    }\r\n    return (\r\n        <View style={{ ...style.container, flex: 2, position: 'relative' }}>\r\n            <IconButton icon='arrow-left' onPress={props.onClose} size={30} color='white' style={{ position: 'absolute', alignSelf: 'flex-start', top: 40, zIndex: 2 }} />\r\n            <QRCodeScanner onRead={async (e: Event) => {\r\n                setLoading(true);\r\n                try {\r\n                    await props.onVerify(e.data);\r\n                }\r\n                catch (e) {\r\n                    setLoading(false);\r\n                    setErrorVisible(true);\r\n                }\r\n            }}\r\n                customMarker={\r\n                    <View style={{ marginTop: -(screen.width / 2) }}>\r\n                        <QRCodeMask />\r\n                        <CPMText style={{ ...style.qrtext, ...style.center }}>Move closer to scan</CPMText>\r\n                    </View>\r\n                }\r\n                showMarker={true}\r\n                topViewStyle={{ flex: 0, height: 0 }}\r\n                cameraStyle={{ height: screen.height + 20, width: screen.width }}\r\n                bottomContent={< View style={{ flex: 2, justifyContent: 'flex-end' }}>\r\n                    <SimulatedButton textColor='white' />\r\n                    <Footer text={qrcodeFooterText} textColor='white' />\r\n                </View>}\r\n\r\n            />\r\n            <ErrorDialog title='Error' text='Failed to parse inserted code. Try again or use a simulated connection' visible={errorVisible} setVisible={(val) => { setErrorVisible(val); setLoading(val); }} />\r\n        </View >\r\n    )\r\n}\r\n\r\nfunction SimulatedButton(props: { textColor?: string }) {\r\n    const { dispatch } = useContext(ConfigContext);\r\n    const { screen, orientation } = useScreenDimensions();\r\n\r\n    const viewStyle: ViewStyle = orientation == 'portrait' ? {} : {};\r\n    return (\r\n        <View style={{ alignItems: 'center', ...viewStyle }}>\r\n            <CPMText style={props.textColor ? { color: props.textColor } : {}}>Don't have a code?</CPMText>\r\n            <CPMButton style={style.button} mode='contained' onPress={() => {\r\n                // set simulation. data will not be sent to IoTCentral\r\n                dispatch({\r\n                    type: 'CONNECT',\r\n                    payload: null\r\n                });\r\n            }}>Use simulated code</CPMButton>\r\n        </View>);\r\n}\r\n\r\n\r\n\r\nconst style = StyleSheet.create({\r\n    container: {\r\n        alignItems: 'center',\r\n        marginHorizontal: 30\r\n    },\r\n    title: {\r\n        fontWeight: 'bold',\r\n        textAlign: 'center'\r\n    },\r\n    instructions: {\r\n        fontSize: 24,\r\n        textAlign: 'center'\r\n    },\r\n    button: {\r\n        alignSelf: 'center',\r\n        width: 230,\r\n        height: 40,\r\n        marginVertical: 20\r\n    },\r\n    center: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        bottom: 0,\r\n        left: 0,\r\n        right: 0\r\n    },\r\n    qrtext: {\r\n        fontSize: 15,\r\n        color: 'white',\r\n        marginBottom: 20,\r\n        textAlign: 'center'\r\n    },\r\n    loading: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    }\r\n})"]},"metadata":{},"sourceType":"script"}